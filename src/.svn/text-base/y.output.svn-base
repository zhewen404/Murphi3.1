Useless nonterminals

   onerule
   fairness
   liveness
   liveU
   liveE
   liveEA
   liveAE
   liveAIE
   liveAIU


Terminals which are not used

   PROGRAM
   PROCESS
   IN
   OLDEND
   INTERLEAVED
   TRACEUNTIL
   FAIRNESS
   LIVENESS
   ALWAYS
   EVENTUALLY
   UNTIL
   FAILED
   LIVENESSSET
   ENDLIVENESSSET
   FAIRNESSSET
   ENDFAIRNESSSET


Useless rules

  252 onerule: rule semi
  253        | rule

  254 fairness: FAIRNESS optString expr

  255 liveness: liveU
  256         | liveE
  257         | liveAE
  258         | liveEA
  259         | liveAIU
  260         | liveAIE

  261 liveU: LIVENESS optString expr UNTIL expr

  262 liveE: LIVENESS optString EVENTUALLY expr

  263 liveEA: LIVENESS optString EVENTUALLY ALWAYS expr

  264 liveAE: LIVENESS optString ALWAYS EVENTUALLY expr

  265 liveAIE: LIVENESS optString ALWAYS expr IMPLIES EVENTUALLY expr

  266 liveAIU: LIVENESS optString ALWAYS expr IMPLIES expr UNTIL expr


State 86 conflicts: 1 shift/reduce
State 191 conflicts: 1 shift/reduce


Grammar

    0 $accept: prog $end

    1 @1: /* empty */

    2 @2: /* empty */

    3 @3: /* empty */

    4 prog: @1 decls @2 procDecls @3 rules

    5 decls: decls decl
    6      | /* empty */

    7 decl: CONST constDecls
    8     | TYPE typeDecls
    9     | VAR varDecls

   10 constDecls: constDecls constDecl semi
   11           | /* empty */

   12 semi: ';'

   13 constDecl: ID ':' expr

   14 typeDecls: typeDecls typeDecl semi
   15          | /* empty */

   16 typeDecl: ID ':' typeExpr

   17 typeExpr: typeid
   18         | enumtype
   19         | subrangetype
   20         | recordtype
   21         | arraytype
   22         | scalarsettype
   23         | uniontype
   24         | multisettype

   25 typeid: ID

   26 @4: /* empty */

   27 enumtype: ENUM @4 '{' enums '}'

   28 enums: enums ',' ID
   29      | enums ID
   30      | ID

   31 subrangetype: expr DOTDOT expr

   32 @5: /* empty */

   33 @6: /* empty */

   34 recordtype: RECORD optInterleaved @5 @6 fields endrecord

   35 endrecord: ENDRECORD
   36          | END

   37 optInterleaved: /* empty */

   38 fields: fields semi field
   39       | fields semi
   40       | field

   41 @7: /* empty */

   42 field: @7 ID fieldtail

   43 fieldtail: ',' ID fieldtail
   44          | ':' typeExpr

   45 arraytype: ARRAY optInterleaved '[' typeExpr ']' OF typeExpr

   46 multisettype: MULTISET optInterleaved '[' expr ']' OF typeExpr

   47 scalarsettype: SCALARSET '(' expr ')'

   48 uniontype: UNION '{' unionlist '}'

   49 unionlist: unionlist ',' unionlistelt
   50          | unionlistelt ',' unionlistelt

   51 unionlistelt: ID
   52             | scalarsettype
   53             | enumtype

   54 varDecls: varDecls varDecl semi
   55         | /* empty */

   56 @8: /* empty */

   57 varDecl: @8 ID vardecltail

   58 vardecltail: ',' ID vardecltail
   59            | ':' typeExpr

   60 procDecls: procDecls procDecl
   61          | procDecls funcDecl
   62          | /* empty */

   63 @9: /* empty */

   64 @10: /* empty */

   65 @11: /* empty */

   66 procDecl: PROCEDURE ID @9 '(' optformals ')' semi @10 optdecls @11 optstmts endprocedure semi

   67 endprocedure: ENDPROCEDURE
   68             | END

   69 @12: /* empty */

   70 @13: /* empty */

   71 @14: /* empty */

   72 @15: /* empty */

   73 funcDecl: FUNCTION ID @12 '(' optformals ')' @13 ':' typeExpr semi @14 optdecls @15 optstmts endfunction semi

   74 endfunction: ENDFUNCTION
   75            | END

   76 optformals: formals
   77           | /* empty */

   78 formals: formals semi formal
   79        | formals semi
   80        | formal
   81        | formals ',' formal

   82 @16: /* empty */

   83 formal: VAR @16 formalrest

   84 @17: /* empty */

   85 formal: @17 formalrest

   86 formalrest: ID formaltail

   87 formaltail: ',' ID formaltail
   88           | ':' typeExpr

   89 optdecls: decls bEGIN
   90         | /* empty */

   91 designator: ID
   92           | designator '[' expr ']'
   93           | designator '.' ID

   94 expr: expr '?' expr ':' expr
   95     | expr IMPLIES expr
   96     | expr '|' expr
   97     | expr '&' expr
   98     | NOT expr
   99     | expr '<' expr
  100     | expr LEQ expr
  101     | expr '>' expr
  102     | expr GEQ expr
  103     | expr '=' expr
  104     | expr NEQ expr
  105     | expr '+' expr
  106     | expr '-' expr
  107     | '+' expr
  108     | '-' expr
  109     | expr '*' expr
  110     | expr '/' expr
  111     | expr '%' expr
  112     | INTCONST
  113     | designator
  114     | ID actuals
  115     | ISUNDEFINED '(' designator ')'
  116     | ISMEMBER '(' designator ',' typeExpr ')'
  117     | '(' expr ')'

  118 @18: /* empty */

  119 expr: FORALL @18 quantifiers do expr endforall

  120 @19: /* empty */

  121 expr: EXISTS @19 quantifiers do expr endexists
  122     | error

  123 @20: /* empty */

  124 @21: /* empty */

  125 expr: MULTISETCOUNT '(' @20 ID ':' designator ',' @21 expr ')'

  126 endforall: ENDFORALL
  127          | END

  128 endexists: ENDEXISTS
  129          | END

  130 actuals: '(' exprlist ')'
  131        | '(' ')'

  132 exprlist: exprlist ',' expr
  133         | expr
  134         | exprlist ',' UNDEFINED
  135         | UNDEFINED

  136 quantifier: ID ':' typeExpr
  137           | ID ASSIGN expr TO expr optBy

  138 quantifiers: quantifier ';' quantifiers
  139            | quantifier

  140 do: DO
  141   | ':'

  142 optBy: BY expr
  143      | /* empty */

  144 @22: /* empty */

  145 optstmts: @22 stmts
  146         | /* empty */

  147 stmts: stmts semi stmt
  148      | stmts semi
  149      | stmt

  150 stmt: assignment
  151     | ifstmt
  152     | whilestmt
  153     | switchstmt
  154     | forstmt
  155     | proccall
  156     | clearstmt
  157     | errorstmt
  158     | assertstmt
  159     | putstmt
  160     | aliasstmt
  161     | returnstmt
  162     | undefinestmt
  163     | multisetaddstmt
  164     | multisetremovestmt

  165 assignment: designator ASSIGN expr
  166           | designator ASSIGN UNDEFINED

  167 ifstmt: IF expr THEN optstmts optElses endif

  168 endif: ENDIF
  169      | END

  170 optElses: elsif optElses
  171         | optElse

  172 elsif: ELSIF expr THEN optstmts

  173 optElse: ELSE optstmts
  174        | /* empty */

  175 whilestmt: WHILE expr do optstmts endwhile

  176 endwhile: ENDWHILE
  177         | END

  178 @23: /* empty */

  179 @24: /* empty */

  180 switchstmt: SWITCH expr @23 @24 optCases optElse endswitch

  181 endswitch: ENDSWITCH
  182          | END

  183 optCases: optCases case
  184         | /* empty */

  185 case: CASE exprlist ':' optstmts

  186 @25: /* empty */

  187 forstmt: FOR @25 quantifiers do optstmts endfor

  188 endfor: ENDFOR
  189       | END

  190 proccall: ID actuals

  191 clearstmt: CLEAR designator

  192 undefinestmt: UNDEFINE designator

  193 multisetaddstmt: MULTISETADD '(' designator ',' designator ')'

  194 @26: /* empty */

  195 @27: /* empty */

  196 multisetremovestmt: MULTISETREMOVEPRED '(' @26 ID ':' designator @27 ',' expr ')'
  197                   | MULTISETREMOVE '(' expr ',' designator ')'

  198 errorstmt: ERROR STRING

  199 assertstmt: ASSERT expr optString

  200 putstmt: PUT expr
  201        | PUT STRING

  202 @28: /* empty */

  203 aliasstmt: ALIAS @28 aliases do optstmts endalias

  204 endalias: ENDALIAS
  205         | END

  206 aliases: aliases semi alias
  207        | aliases semi
  208        | aliases ',' alias
  209        | alias

  210 alias: ID ':' expr

  211 returnstmt: RETURN optretexpr

  212 optretexpr: expr
  213           | /* empty */

  214 rules: rule semi rules
  215      | rule semi
  216      | rule

  217 rule: simplerule
  218     | aliasrule
  219     | ruleset
  220     | startstate
  221     | invariant
  222     | error
  223     | choose

  224 @29: /* empty */

  225 simplerule: RULE optFair optPriority optString optCondition @29 optdecls optstmts endrule

  226 optFair: UNFAIR
  227        | /* empty */

  228 endrule: ENDRULE
  229        | END

  230 optCondition: expr LONGARROW
  231             | /* empty */

  232 optString: STRING
  233          | /* empty */

  234 optPriority: INTCONST
  235            | /* empty */

  236 @30: /* empty */

  237 aliasrule: ALIAS @30 aliases do rules endalias

  238 @31: /* empty */

  239 ruleset: RULESET @31 quantifiers do rules endruleset

  240 endruleset: ENDRULESET
  241           | END

  242 @32: /* empty */

  243 @33: /* empty */

  244 choose: CHOOSE @32 ID ':' designator @33 do rules endchoose

  245 endchoose: ENDCHOOSE
  246          | END

  247 @34: /* empty */

  248 startstate: STARTSTATE @34 optString optdecls optstmts endstartstate

  249 endstartstate: ENDSTARTSTATE
  250              | END

  251 invariant: INVARIANT optString expr


Terminals, with rules where they appear

$end (0) 0
'%' (37) 111
'&' (38) 97
'(' (40) 47 66 73 115 116 117 125 130 131 193 196 197
')' (41) 47 66 73 115 116 117 125 130 131 193 196 197
'*' (42) 109
'+' (43) 105 107
',' (44) 28 43 49 50 58 81 87 116 125 132 134 193 196 197 208
'-' (45) 106 108
'.' (46) 93
'/' (47) 110
':' (58) 13 16 44 59 73 88 94 125 136 141 185 196 210 244
';' (59) 12 138
'<' (60) 99
'=' (61) 103
'>' (62) 101
'?' (63) 94
'[' (91) 45 46 92
']' (93) 45 46 92
'{' (123) 27 48
'|' (124) 96
'}' (125) 27 48
error (256) 122 222
END (258) 36 68 75 127 129 169 177 182 189 205 229 241 246 250
PROGRAM (259)
PROCESS (260)
PROCEDURE (261) 66
ENDPROCEDURE (262) 67
FUNCTION (263) 73
ENDFUNCTION (264) 74
RULE (265) 225
ENDRULE (266) 228
RULESET (267) 239
ENDRULESET (268) 240
ALIAS (269) 203 237
ENDALIAS (270) 204
IF (271) 167
THEN (272) 167 172
ELSIF (273) 172
ELSE (274) 173
ENDIF (275) 168
SWITCH (276) 180
CASE (277) 185
ENDSWITCH (278) 181
FOR (279) 187
FORALL (280) 119
EXISTS (281) 121
IN (282)
DO (283) 140
ENDFOR (284) 188
ENDFORALL (285) 126
ENDEXISTS (286) 128
WHILE (287) 175
ENDWHILE (288) 176
RETURN (289) 211
TO (290) 137
bEGIN (291) 89
BY (292) 142
OLDEND (293)
LONGARROW (294) 230
DOTDOT (295) 31
ASSIGN (296) 137 165 166
CLEAR (297) 191
ERROR (298) 198
ASSERT (299) 199
PUT (300) 200 201
CONST (301) 7
TYPE (302) 8
VAR (303) 9 83
ENUM (304) 27
INTERLEAVED (305)
RECORD (306) 34
ARRAY (307) 45
OF (308) 45 46
ENDRECORD (309) 35
STARTSTATE (310) 248
ENDSTARTSTATE (311) 249
INVARIANT (312) 251
TRACEUNTIL (313)
STRING (314) 198 201 232
ID (315) 13 16 25 28 29 30 42 43 51 57 58 66 73 86 87 91 93 114 125
    136 137 190 196 210 244
INTCONST (316) 112 234
FAIRNESS (317)
LIVENESS (318)
ALWAYS (319)
EVENTUALLY (320)
UNTIL (321)
FAILED (322)
UNFAIR (323) 226
LIVENESSSET (324)
ENDLIVENESSSET (325)
FAIRNESSSET (326)
ENDFAIRNESSSET (327)
SCALARSET (328) 47
ISMEMBER (329) 116
UNDEFINE (330) 192
ISUNDEFINED (331) 115
UNDEFINED (332) 134 135 166
UNION (333) 48
MULTISET (334) 46
MULTISETREMOVE (335) 197
MULTISETREMOVEPRED (336) 196
MULTISETADD (337) 193
MULTISETCOUNT (338) 125
CHOOSE (339) 244
ENDCHOOSE (340) 245
IMPLIES (341) 95
NOT (342) 98
GEQ (343) 102
NEQ (344) 104
LEQ (345) 100


Nonterminals, with rules where they appear

$accept (112)
    on left: 0
prog (113)
    on left: 4, on right: 0
@1 (114)
    on left: 1, on right: 4
@2 (115)
    on left: 2, on right: 4
@3 (116)
    on left: 3, on right: 4
decls (117)
    on left: 5 6, on right: 4 5 89
decl (118)
    on left: 7 8 9, on right: 5
constDecls (119)
    on left: 10 11, on right: 7 10
semi (120)
    on left: 12, on right: 10 14 38 39 54 66 73 78 79 147 148 206 207
    214 215
constDecl (121)
    on left: 13, on right: 10
typeDecls (122)
    on left: 14 15, on right: 8 14
typeDecl (123)
    on left: 16, on right: 14
typeExpr (124)
    on left: 17 18 19 20 21 22 23 24, on right: 16 44 45 46 59 73 88
    116 136
typeid (125)
    on left: 25, on right: 17
enumtype (126)
    on left: 27, on right: 18 53
@4 (127)
    on left: 26, on right: 27
enums (128)
    on left: 28 29 30, on right: 27 28 29
subrangetype (129)
    on left: 31, on right: 19
recordtype (130)
    on left: 34, on right: 20
@5 (131)
    on left: 32, on right: 34
@6 (132)
    on left: 33, on right: 34
endrecord (133)
    on left: 35 36, on right: 34
optInterleaved (134)
    on left: 37, on right: 34 45 46
fields (135)
    on left: 38 39 40, on right: 34 38 39
field (136)
    on left: 42, on right: 38 40
@7 (137)
    on left: 41, on right: 42
fieldtail (138)
    on left: 43 44, on right: 42 43
arraytype (139)
    on left: 45, on right: 21
multisettype (140)
    on left: 46, on right: 24
scalarsettype (141)
    on left: 47, on right: 22 52
uniontype (142)
    on left: 48, on right: 23
unionlist (143)
    on left: 49 50, on right: 48 49
unionlistelt (144)
    on left: 51 52 53, on right: 49 50
varDecls (145)
    on left: 54 55, on right: 9 54
varDecl (146)
    on left: 57, on right: 54
@8 (147)
    on left: 56, on right: 57
vardecltail (148)
    on left: 58 59, on right: 57 58
procDecls (149)
    on left: 60 61 62, on right: 4 60 61
procDecl (150)
    on left: 66, on right: 60
@9 (151)
    on left: 63, on right: 66
@10 (152)
    on left: 64, on right: 66
@11 (153)
    on left: 65, on right: 66
endprocedure (154)
    on left: 67 68, on right: 66
funcDecl (155)
    on left: 73, on right: 61
@12 (156)
    on left: 69, on right: 73
@13 (157)
    on left: 70, on right: 73
@14 (158)
    on left: 71, on right: 73
@15 (159)
    on left: 72, on right: 73
endfunction (160)
    on left: 74 75, on right: 73
optformals (161)
    on left: 76 77, on right: 66 73
formals (162)
    on left: 78 79 80 81, on right: 76 78 79 81
formal (163)
    on left: 83 85, on right: 78 80 81
@16 (164)
    on left: 82, on right: 83
@17 (165)
    on left: 84, on right: 85
formalrest (166)
    on left: 86, on right: 83 85
formaltail (167)
    on left: 87 88, on right: 86 87
optdecls (168)
    on left: 89 90, on right: 66 73 225 248
designator (169)
    on left: 91 92 93, on right: 92 93 113 115 116 125 165 166 191
    192 193 196 197 244
expr (170)
    on left: 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108
    109 110 111 112 113 114 115 116 117 119 121 122 125,
    on right: 13 31 46 47 92 94 95 96 97 98 99 100 101 102 103 104
    105 106 107 108 109 110 111 117 119 121 125 132 133 137 142 165
    167 172 175 180 196 197 199 200 210 212 230 251
@18 (171)
    on left: 118, on right: 119
@19 (172)
    on left: 120, on right: 121
@20 (173)
    on left: 123, on right: 125
@21 (174)
    on left: 124, on right: 125
endforall (175)
    on left: 126 127, on right: 119
endexists (176)
    on left: 128 129, on right: 121
actuals (177)
    on left: 130 131, on right: 114 190
exprlist (178)
    on left: 132 133 134 135, on right: 130 132 134 185
quantifier (179)
    on left: 136 137, on right: 138 139
quantifiers (180)
    on left: 138 139, on right: 119 121 138 187 239
do (181)
    on left: 140 141, on right: 119 121 175 187 203 237 239 244
optBy (182)
    on left: 142 143, on right: 137
optstmts (183)
    on left: 145 146, on right: 66 73 167 172 173 175 185 187 203 225
    248
@22 (184)
    on left: 144, on right: 145
stmts (185)
    on left: 147 148 149, on right: 145 147 148
stmt (186)
    on left: 150 151 152 153 154 155 156 157 158 159 160 161 162 163
    164, on right: 147 149
assignment (187)
    on left: 165 166, on right: 150
ifstmt (188)
    on left: 167, on right: 151
endif (189)
    on left: 168 169, on right: 167
optElses (190)
    on left: 170 171, on right: 167 170
elsif (191)
    on left: 172, on right: 170
optElse (192)
    on left: 173 174, on right: 171 180
whilestmt (193)
    on left: 175, on right: 152
endwhile (194)
    on left: 176 177, on right: 175
switchstmt (195)
    on left: 180, on right: 153
@23 (196)
    on left: 178, on right: 180
@24 (197)
    on left: 179, on right: 180
endswitch (198)
    on left: 181 182, on right: 180
optCases (199)
    on left: 183 184, on right: 180 183
case (200)
    on left: 185, on right: 183
forstmt (201)
    on left: 187, on right: 154
@25 (202)
    on left: 186, on right: 187
endfor (203)
    on left: 188 189, on right: 187
proccall (204)
    on left: 190, on right: 155
clearstmt (205)
    on left: 191, on right: 156
undefinestmt (206)
    on left: 192, on right: 162
multisetaddstmt (207)
    on left: 193, on right: 163
multisetremovestmt (208)
    on left: 196 197, on right: 164
@26 (209)
    on left: 194, on right: 196
@27 (210)
    on left: 195, on right: 196
errorstmt (211)
    on left: 198, on right: 157
assertstmt (212)
    on left: 199, on right: 158
putstmt (213)
    on left: 200 201, on right: 159
aliasstmt (214)
    on left: 203, on right: 160
@28 (215)
    on left: 202, on right: 203
endalias (216)
    on left: 204 205, on right: 203 237
aliases (217)
    on left: 206 207 208 209, on right: 203 206 207 208 237
alias (218)
    on left: 210, on right: 206 208 209
returnstmt (219)
    on left: 211, on right: 161
optretexpr (220)
    on left: 212 213, on right: 211
rules (221)
    on left: 214 215 216, on right: 4 214 237 239 244
rule (222)
    on left: 217 218 219 220 221 222 223, on right: 214 215 216
simplerule (223)
    on left: 225, on right: 217
@29 (224)
    on left: 224, on right: 225
optFair (225)
    on left: 226 227, on right: 225
endrule (226)
    on left: 228 229, on right: 225
optCondition (227)
    on left: 230 231, on right: 225
optString (228)
    on left: 232 233, on right: 199 225 248 251
optPriority (229)
    on left: 234 235, on right: 225
aliasrule (230)
    on left: 237, on right: 218
@30 (231)
    on left: 236, on right: 237
ruleset (232)
    on left: 239, on right: 219
@31 (233)
    on left: 238, on right: 239
endruleset (234)
    on left: 240 241, on right: 239
choose (235)
    on left: 244, on right: 223
@32 (236)
    on left: 242, on right: 244
@33 (237)
    on left: 243, on right: 244
endchoose (238)
    on left: 245 246, on right: 244
startstate (239)
    on left: 248, on right: 220
@34 (240)
    on left: 247, on right: 248
endstartstate (241)
    on left: 249 250, on right: 248
invariant (242)
    on left: 251, on right: 221


state 0

    0 $accept: . prog $end

    $default  reduce using rule 1 (@1)

    prog  go to state 1
    @1    go to state 2


state 1

    0 $accept: prog . $end

    $end  shift, and go to state 3


state 2

    4 prog: @1 . decls @2 procDecls @3 rules

    $default  reduce using rule 6 (decls)

    decls  go to state 4


state 3

    0 $accept: prog $end .

    $default  accept


state 4

    4 prog: @1 decls . @2 procDecls @3 rules
    5 decls: decls . decl

    CONST  shift, and go to state 5
    TYPE   shift, and go to state 6
    VAR    shift, and go to state 7

    $default  reduce using rule 2 (@2)

    @2    go to state 8
    decl  go to state 9


state 5

    7 decl: CONST . constDecls

    $default  reduce using rule 11 (constDecls)

    constDecls  go to state 10


state 6

    8 decl: TYPE . typeDecls

    $default  reduce using rule 15 (typeDecls)

    typeDecls  go to state 11


state 7

    9 decl: VAR . varDecls

    $default  reduce using rule 55 (varDecls)

    varDecls  go to state 12


state 8

    4 prog: @1 decls @2 . procDecls @3 rules

    $default  reduce using rule 62 (procDecls)

    procDecls  go to state 13


state 9

    5 decls: decls decl .

    $default  reduce using rule 5 (decls)


state 10

    7 decl: CONST constDecls .
   10 constDecls: constDecls . constDecl semi

    ID  shift, and go to state 14

    $default  reduce using rule 7 (decl)

    constDecl  go to state 15


state 11

    8 decl: TYPE typeDecls .
   14 typeDecls: typeDecls . typeDecl semi

    ID  shift, and go to state 16

    $default  reduce using rule 8 (decl)

    typeDecl  go to state 17


state 12

    9 decl: VAR varDecls .
   54 varDecls: varDecls . varDecl semi

    ID        reduce using rule 56 (@8)
    $default  reduce using rule 9 (decl)

    varDecl  go to state 18
    @8       go to state 19


state 13

    4 prog: @1 decls @2 procDecls . @3 rules
   60 procDecls: procDecls . procDecl
   61          | procDecls . funcDecl

    PROCEDURE  shift, and go to state 20
    FUNCTION   shift, and go to state 21

    $default  reduce using rule 3 (@3)

    @3        go to state 22
    procDecl  go to state 23
    funcDecl  go to state 24


state 14

   13 constDecl: ID . ':' expr

    ':'  shift, and go to state 25


state 15

   10 constDecls: constDecls constDecl . semi

    ';'  shift, and go to state 26

    semi  go to state 27


state 16

   16 typeDecl: ID . ':' typeExpr

    ':'  shift, and go to state 28


state 17

   14 typeDecls: typeDecls typeDecl . semi

    ';'  shift, and go to state 26

    semi  go to state 29


state 18

   54 varDecls: varDecls varDecl . semi

    ';'  shift, and go to state 26

    semi  go to state 30


state 19

   57 varDecl: @8 . ID vardecltail

    ID  shift, and go to state 31


state 20

   66 procDecl: PROCEDURE . ID @9 '(' optformals ')' semi @10 optdecls @11 optstmts endprocedure semi

    ID  shift, and go to state 32


state 21

   73 funcDecl: FUNCTION . ID @12 '(' optformals ')' @13 ':' typeExpr semi @14 optdecls @15 optstmts endfunction semi

    ID  shift, and go to state 33


state 22

    4 prog: @1 decls @2 procDecls @3 . rules

    error       shift, and go to state 34
    RULE        shift, and go to state 35
    RULESET     shift, and go to state 36
    ALIAS       shift, and go to state 37
    STARTSTATE  shift, and go to state 38
    INVARIANT   shift, and go to state 39
    CHOOSE      shift, and go to state 40

    rules       go to state 41
    rule        go to state 42
    simplerule  go to state 43
    aliasrule   go to state 44
    ruleset     go to state 45
    choose      go to state 46
    startstate  go to state 47
    invariant   go to state 48


state 23

   60 procDecls: procDecls procDecl .

    $default  reduce using rule 60 (procDecls)


state 24

   61 procDecls: procDecls funcDecl .

    $default  reduce using rule 61 (procDecls)


state 25

   13 constDecl: ID ':' . expr

    error          shift, and go to state 49
    FORALL         shift, and go to state 50
    EXISTS         shift, and go to state 51
    ID             shift, and go to state 52
    INTCONST       shift, and go to state 53
    ISMEMBER       shift, and go to state 54
    ISUNDEFINED    shift, and go to state 55
    MULTISETCOUNT  shift, and go to state 56
    NOT            shift, and go to state 57
    '+'            shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60

    designator  go to state 61
    expr        go to state 62


state 26

   12 semi: ';' .

    $default  reduce using rule 12 (semi)


state 27

   10 constDecls: constDecls constDecl semi .

    $default  reduce using rule 10 (constDecls)


state 28

   16 typeDecl: ID ':' . typeExpr

    error          shift, and go to state 49
    FORALL         shift, and go to state 50
    EXISTS         shift, and go to state 51
    ENUM           shift, and go to state 63
    RECORD         shift, and go to state 64
    ARRAY          shift, and go to state 65
    ID             shift, and go to state 66
    INTCONST       shift, and go to state 53
    SCALARSET      shift, and go to state 67
    ISMEMBER       shift, and go to state 54
    ISUNDEFINED    shift, and go to state 55
    UNION          shift, and go to state 68
    MULTISET       shift, and go to state 69
    MULTISETCOUNT  shift, and go to state 56
    NOT            shift, and go to state 57
    '+'            shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60

    typeExpr       go to state 70
    typeid         go to state 71
    enumtype       go to state 72
    subrangetype   go to state 73
    recordtype     go to state 74
    arraytype      go to state 75
    multisettype   go to state 76
    scalarsettype  go to state 77
    uniontype      go to state 78
    designator     go to state 61
    expr           go to state 79


state 29

   14 typeDecls: typeDecls typeDecl semi .

    $default  reduce using rule 14 (typeDecls)


state 30

   54 varDecls: varDecls varDecl semi .

    $default  reduce using rule 54 (varDecls)


state 31

   57 varDecl: @8 ID . vardecltail

    ':'  shift, and go to state 80
    ','  shift, and go to state 81

    vardecltail  go to state 82


state 32

   66 procDecl: PROCEDURE ID . @9 '(' optformals ')' semi @10 optdecls @11 optstmts endprocedure semi

    $default  reduce using rule 63 (@9)

    @9  go to state 83


state 33

   73 funcDecl: FUNCTION ID . @12 '(' optformals ')' @13 ':' typeExpr semi @14 optdecls @15 optstmts endfunction semi

    $default  reduce using rule 69 (@12)

    @12  go to state 84


state 34

  222 rule: error .

    $default  reduce using rule 222 (rule)


state 35

  225 simplerule: RULE . optFair optPriority optString optCondition @29 optdecls optstmts endrule

    UNFAIR  shift, and go to state 85

    $default  reduce using rule 227 (optFair)

    optFair  go to state 86


state 36

  239 ruleset: RULESET . @31 quantifiers do rules endruleset

    $default  reduce using rule 238 (@31)

    @31  go to state 87


state 37

  237 aliasrule: ALIAS . @30 aliases do rules endalias

    $default  reduce using rule 236 (@30)

    @30  go to state 88


state 38

  248 startstate: STARTSTATE . @34 optString optdecls optstmts endstartstate

    $default  reduce using rule 247 (@34)

    @34  go to state 89


state 39

  251 invariant: INVARIANT . optString expr

    STRING  shift, and go to state 90

    $default  reduce using rule 233 (optString)

    optString  go to state 91


state 40

  244 choose: CHOOSE . @32 ID ':' designator @33 do rules endchoose

    $default  reduce using rule 242 (@32)

    @32  go to state 92


state 41

    4 prog: @1 decls @2 procDecls @3 rules .

    $default  reduce using rule 4 (prog)


state 42

  214 rules: rule . semi rules
  215      | rule . semi
  216      | rule .

    ';'  shift, and go to state 26

    $default  reduce using rule 216 (rules)

    semi  go to state 93


state 43

  217 rule: simplerule .

    $default  reduce using rule 217 (rule)


state 44

  218 rule: aliasrule .

    $default  reduce using rule 218 (rule)


state 45

  219 rule: ruleset .

    $default  reduce using rule 219 (rule)


state 46

  223 rule: choose .

    $default  reduce using rule 223 (rule)


state 47

  220 rule: startstate .

    $default  reduce using rule 220 (rule)


state 48

  221 rule: invariant .

    $default  reduce using rule 221 (rule)


state 49

  122 expr: error .

    $default  reduce using rule 122 (expr)


state 50

  119 expr: FORALL . @18 quantifiers do expr endforall

    $default  reduce using rule 118 (@18)

    @18  go to state 94


state 51

  121 expr: EXISTS . @19 quantifiers do expr endexists

    $default  reduce using rule 120 (@19)

    @19  go to state 95


state 52

   91 designator: ID .
  114 expr: ID . actuals

    '('  shift, and go to state 96

    $default  reduce using rule 91 (designator)

    actuals  go to state 97


state 53

  112 expr: INTCONST .

    $default  reduce using rule 112 (expr)


state 54

  116 expr: ISMEMBER . '(' designator ',' typeExpr ')'

    '('  shift, and go to state 98


state 55

  115 expr: ISUNDEFINED . '(' designator ')'

    '('  shift, and go to state 99


state 56

  125 expr: MULTISETCOUNT . '(' @20 ID ':' designator ',' @21 expr ')'

    '('  shift, and go to state 100


state 57

   98 expr: NOT . expr

    error          shift, and go to state 49
    FORALL         shift, and go to state 50
    EXISTS         shift, and go to state 51
    ID             shift, and go to state 52
    INTCONST       shift, and go to state 53
    ISMEMBER       shift, and go to state 54
    ISUNDEFINED    shift, and go to state 55
    MULTISETCOUNT  shift, and go to state 56
    NOT            shift, and go to state 57
    '+'            shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60

    designator  go to state 61
    expr        go to state 101


state 58

  107 expr: '+' . expr

    error          shift, and go to state 49
    FORALL         shift, and go to state 50
    EXISTS         shift, and go to state 51
    ID             shift, and go to state 52
    INTCONST       shift, and go to state 53
    ISMEMBER       shift, and go to state 54
    ISUNDEFINED    shift, and go to state 55
    MULTISETCOUNT  shift, and go to state 56
    NOT            shift, and go to state 57
    '+'            shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60

    designator  go to state 61
    expr        go to state 102


state 59

  108 expr: '-' . expr

    error          shift, and go to state 49
    FORALL         shift, and go to state 50
    EXISTS         shift, and go to state 51
    ID             shift, and go to state 52
    INTCONST       shift, and go to state 53
    ISMEMBER       shift, and go to state 54
    ISUNDEFINED    shift, and go to state 55
    MULTISETCOUNT  shift, and go to state 56
    NOT            shift, and go to state 57
    '+'            shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60

    designator  go to state 61
    expr        go to state 103


state 60

  117 expr: '(' . expr ')'

    error          shift, and go to state 49
    FORALL         shift, and go to state 50
    EXISTS         shift, and go to state 51
    ID             shift, and go to state 52
    INTCONST       shift, and go to state 53
    ISMEMBER       shift, and go to state 54
    ISUNDEFINED    shift, and go to state 55
    MULTISETCOUNT  shift, and go to state 56
    NOT            shift, and go to state 57
    '+'            shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60

    designator  go to state 61
    expr        go to state 104


state 61

   92 designator: designator . '[' expr ']'
   93           | designator . '.' ID
  113 expr: designator .

    '['  shift, and go to state 105
    '.'  shift, and go to state 106

    $default  reduce using rule 113 (expr)


state 62

   13 constDecl: ID ':' expr .
   94 expr: expr . '?' expr ':' expr
   95     | expr . IMPLIES expr
   96     | expr . '|' expr
   97     | expr . '&' expr
   99     | expr . '<' expr
  100     | expr . LEQ expr
  101     | expr . '>' expr
  102     | expr . GEQ expr
  103     | expr . '=' expr
  104     | expr . NEQ expr
  105     | expr . '+' expr
  106     | expr . '-' expr
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . '%' expr

    '?'      shift, and go to state 107
    IMPLIES  shift, and go to state 108
    '|'      shift, and go to state 109
    '&'      shift, and go to state 110
    '<'      shift, and go to state 111
    '='      shift, and go to state 112
    '>'      shift, and go to state 113
    GEQ      shift, and go to state 114
    NEQ      shift, and go to state 115
    LEQ      shift, and go to state 116
    '+'      shift, and go to state 117
    '-'      shift, and go to state 118
    '*'      shift, and go to state 119
    '/'      shift, and go to state 120
    '%'      shift, and go to state 121

    $default  reduce using rule 13 (constDecl)


state 63

   27 enumtype: ENUM . @4 '{' enums '}'

    $default  reduce using rule 26 (@4)

    @4  go to state 122


state 64

   34 recordtype: RECORD . optInterleaved @5 @6 fields endrecord

    $default  reduce using rule 37 (optInterleaved)

    optInterleaved  go to state 123


state 65

   45 arraytype: ARRAY . optInterleaved '[' typeExpr ']' OF typeExpr

    $default  reduce using rule 37 (optInterleaved)

    optInterleaved  go to state 124


state 66

   25 typeid: ID .
   91 designator: ID .
  114 expr: ID . actuals

    '('  shift, and go to state 96

    END        reduce using rule 25 (typeid)
    DO         reduce using rule 25 (typeid)
    ENDRECORD  reduce using rule 25 (typeid)
    ':'        reduce using rule 25 (typeid)
    ';'        reduce using rule 25 (typeid)
    ','        reduce using rule 25 (typeid)
    ']'        reduce using rule 25 (typeid)
    ')'        reduce using rule 25 (typeid)
    $default   reduce using rule 91 (designator)

    actuals  go to state 97


state 67

   47 scalarsettype: SCALARSET . '(' expr ')'

    '('  shift, and go to state 125


state 68

   48 uniontype: UNION . '{' unionlist '}'

    '{'  shift, and go to state 126


state 69

   46 multisettype: MULTISET . optInterleaved '[' expr ']' OF typeExpr

    $default  reduce using rule 37 (optInterleaved)

    optInterleaved  go to state 127


state 70

   16 typeDecl: ID ':' typeExpr .

    $default  reduce using rule 16 (typeDecl)


state 71

   17 typeExpr: typeid .

    $default  reduce using rule 17 (typeExpr)


state 72

   18 typeExpr: enumtype .

    $default  reduce using rule 18 (typeExpr)


state 73

   19 typeExpr: subrangetype .

    $default  reduce using rule 19 (typeExpr)


state 74

   20 typeExpr: recordtype .

    $default  reduce using rule 20 (typeExpr)


state 75

   21 typeExpr: arraytype .

    $default  reduce using rule 21 (typeExpr)


state 76

   24 typeExpr: multisettype .

    $default  reduce using rule 24 (typeExpr)


state 77

   22 typeExpr: scalarsettype .

    $default  reduce using rule 22 (typeExpr)


state 78

   23 typeExpr: uniontype .

    $default  reduce using rule 23 (typeExpr)


state 79

   31 subrangetype: expr . DOTDOT expr
   94 expr: expr . '?' expr ':' expr
   95     | expr . IMPLIES expr
   96     | expr . '|' expr
   97     | expr . '&' expr
   99     | expr . '<' expr
  100     | expr . LEQ expr
  101     | expr . '>' expr
  102     | expr . GEQ expr
  103     | expr . '=' expr
  104     | expr . NEQ expr
  105     | expr . '+' expr
  106     | expr . '-' expr
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . '%' expr

    DOTDOT   shift, and go to state 128
    '?'      shift, and go to state 107
    IMPLIES  shift, and go to state 108
    '|'      shift, and go to state 109
    '&'      shift, and go to state 110
    '<'      shift, and go to state 111
    '='      shift, and go to state 112
    '>'      shift, and go to state 113
    GEQ      shift, and go to state 114
    NEQ      shift, and go to state 115
    LEQ      shift, and go to state 116
    '+'      shift, and go to state 117
    '-'      shift, and go to state 118
    '*'      shift, and go to state 119
    '/'      shift, and go to state 120
    '%'      shift, and go to state 121


state 80

   59 vardecltail: ':' . typeExpr

    error          shift, and go to state 49
    FORALL         shift, and go to state 50
    EXISTS         shift, and go to state 51
    ENUM           shift, and go to state 63
    RECORD         shift, and go to state 64
    ARRAY          shift, and go to state 65
    ID             shift, and go to state 66
    INTCONST       shift, and go to state 53
    SCALARSET      shift, and go to state 67
    ISMEMBER       shift, and go to state 54
    ISUNDEFINED    shift, and go to state 55
    UNION          shift, and go to state 68
    MULTISET       shift, and go to state 69
    MULTISETCOUNT  shift, and go to state 56
    NOT            shift, and go to state 57
    '+'            shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60

    typeExpr       go to state 129
    typeid         go to state 71
    enumtype       go to state 72
    subrangetype   go to state 73
    recordtype     go to state 74
    arraytype      go to state 75
    multisettype   go to state 76
    scalarsettype  go to state 77
    uniontype      go to state 78
    designator     go to state 61
    expr           go to state 79


state 81

   58 vardecltail: ',' . ID vardecltail

    ID  shift, and go to state 130


state 82

   57 varDecl: @8 ID vardecltail .

    $default  reduce using rule 57 (varDecl)


state 83

   66 procDecl: PROCEDURE ID @9 . '(' optformals ')' semi @10 optdecls @11 optstmts endprocedure semi

    '('  shift, and go to state 131


state 84

   73 funcDecl: FUNCTION ID @12 . '(' optformals ')' @13 ':' typeExpr semi @14 optdecls @15 optstmts endfunction semi

    '('  shift, and go to state 132


state 85

  226 optFair: UNFAIR .

    $default  reduce using rule 226 (optFair)


state 86

  225 simplerule: RULE optFair . optPriority optString optCondition @29 optdecls optstmts endrule

    INTCONST  shift, and go to state 133

    INTCONST  [reduce using rule 235 (optPriority)]
    $default  reduce using rule 235 (optPriority)

    optPriority  go to state 134


state 87

  239 ruleset: RULESET @31 . quantifiers do rules endruleset

    ID  shift, and go to state 135

    quantifier   go to state 136
    quantifiers  go to state 137


state 88

  237 aliasrule: ALIAS @30 . aliases do rules endalias

    ID  shift, and go to state 138

    aliases  go to state 139
    alias    go to state 140


state 89

  248 startstate: STARTSTATE @34 . optString optdecls optstmts endstartstate

    STRING  shift, and go to state 90

    $default  reduce using rule 233 (optString)

    optString  go to state 141


state 90

  232 optString: STRING .

    $default  reduce using rule 232 (optString)


state 91

  251 invariant: INVARIANT optString . expr

    error          shift, and go to state 49
    FORALL         shift, and go to state 50
    EXISTS         shift, and go to state 51
    ID             shift, and go to state 52
    INTCONST       shift, and go to state 53
    ISMEMBER       shift, and go to state 54
    ISUNDEFINED    shift, and go to state 55
    MULTISETCOUNT  shift, and go to state 56
    NOT            shift, and go to state 57
    '+'            shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60

    designator  go to state 61
    expr        go to state 142


state 92

  244 choose: CHOOSE @32 . ID ':' designator @33 do rules endchoose

    ID  shift, and go to state 143


state 93

  214 rules: rule semi . rules
  215      | rule semi .

    error       shift, and go to state 34
    RULE        shift, and go to state 35
    RULESET     shift, and go to state 36
    ALIAS       shift, and go to state 37
    STARTSTATE  shift, and go to state 38
    INVARIANT   shift, and go to state 39
    CHOOSE      shift, and go to state 40

    $end        reduce using rule 215 (rules)
    END         reduce using rule 215 (rules)
    ENDRULESET  reduce using rule 215 (rules)
    ENDALIAS    reduce using rule 215 (rules)
    ENDCHOOSE   reduce using rule 215 (rules)

    rules       go to state 144
    rule        go to state 42
    simplerule  go to state 43
    aliasrule   go to state 44
    ruleset     go to state 45
    choose      go to state 46
    startstate  go to state 47
    invariant   go to state 48


state 94

  119 expr: FORALL @18 . quantifiers do expr endforall

    ID  shift, and go to state 135

    quantifier   go to state 136
    quantifiers  go to state 145


state 95

  121 expr: EXISTS @19 . quantifiers do expr endexists

    ID  shift, and go to state 135

    quantifier   go to state 136
    quantifiers  go to state 146


state 96

  130 actuals: '(' . exprlist ')'
  131        | '(' . ')'

    error          shift, and go to state 49
    FORALL         shift, and go to state 50
    EXISTS         shift, and go to state 51
    ID             shift, and go to state 52
    INTCONST       shift, and go to state 53
    ISMEMBER       shift, and go to state 54
    ISUNDEFINED    shift, and go to state 55
    UNDEFINED      shift, and go to state 147
    MULTISETCOUNT  shift, and go to state 56
    NOT            shift, and go to state 57
    '+'            shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60
    ')'            shift, and go to state 148

    designator  go to state 61
    expr        go to state 149
    exprlist    go to state 150


state 97

  114 expr: ID actuals .

    $default  reduce using rule 114 (expr)


state 98

  116 expr: ISMEMBER '(' . designator ',' typeExpr ')'

    ID  shift, and go to state 151

    designator  go to state 152


state 99

  115 expr: ISUNDEFINED '(' . designator ')'

    ID  shift, and go to state 151

    designator  go to state 153


state 100

  125 expr: MULTISETCOUNT '(' . @20 ID ':' designator ',' @21 expr ')'

    $default  reduce using rule 123 (@20)

    @20  go to state 154


state 101

   94 expr: expr . '?' expr ':' expr
   95     | expr . IMPLIES expr
   96     | expr . '|' expr
   97     | expr . '&' expr
   98     | NOT expr .
   99     | expr . '<' expr
  100     | expr . LEQ expr
  101     | expr . '>' expr
  102     | expr . GEQ expr
  103     | expr . '=' expr
  104     | expr . NEQ expr
  105     | expr . '+' expr
  106     | expr . '-' expr
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . '%' expr

    '<'  shift, and go to state 111
    '='  shift, and go to state 112
    '>'  shift, and go to state 113
    GEQ  shift, and go to state 114
    NEQ  shift, and go to state 115
    LEQ  shift, and go to state 116
    '+'  shift, and go to state 117
    '-'  shift, and go to state 118
    '*'  shift, and go to state 119
    '/'  shift, and go to state 120
    '%'  shift, and go to state 121

    $default  reduce using rule 98 (expr)


state 102

   94 expr: expr . '?' expr ':' expr
   95     | expr . IMPLIES expr
   96     | expr . '|' expr
   97     | expr . '&' expr
   99     | expr . '<' expr
  100     | expr . LEQ expr
  101     | expr . '>' expr
  102     | expr . GEQ expr
  103     | expr . '=' expr
  104     | expr . NEQ expr
  105     | expr . '+' expr
  106     | expr . '-' expr
  107     | '+' expr .
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . '%' expr

    $default  reduce using rule 107 (expr)


state 103

   94 expr: expr . '?' expr ':' expr
   95     | expr . IMPLIES expr
   96     | expr . '|' expr
   97     | expr . '&' expr
   99     | expr . '<' expr
  100     | expr . LEQ expr
  101     | expr . '>' expr
  102     | expr . GEQ expr
  103     | expr . '=' expr
  104     | expr . NEQ expr
  105     | expr . '+' expr
  106     | expr . '-' expr
  108     | '-' expr .
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . '%' expr

    $default  reduce using rule 108 (expr)


state 104

   94 expr: expr . '?' expr ':' expr
   95     | expr . IMPLIES expr
   96     | expr . '|' expr
   97     | expr . '&' expr
   99     | expr . '<' expr
  100     | expr . LEQ expr
  101     | expr . '>' expr
  102     | expr . GEQ expr
  103     | expr . '=' expr
  104     | expr . NEQ expr
  105     | expr . '+' expr
  106     | expr . '-' expr
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . '%' expr
  117     | '(' expr . ')'

    '?'      shift, and go to state 107
    IMPLIES  shift, and go to state 108
    '|'      shift, and go to state 109
    '&'      shift, and go to state 110
    '<'      shift, and go to state 111
    '='      shift, and go to state 112
    '>'      shift, and go to state 113
    GEQ      shift, and go to state 114
    NEQ      shift, and go to state 115
    LEQ      shift, and go to state 116
    '+'      shift, and go to state 117
    '-'      shift, and go to state 118
    '*'      shift, and go to state 119
    '/'      shift, and go to state 120
    '%'      shift, and go to state 121
    ')'      shift, and go to state 155


state 105

   92 designator: designator '[' . expr ']'

    error          shift, and go to state 49
    FORALL         shift, and go to state 50
    EXISTS         shift, and go to state 51
    ID             shift, and go to state 52
    INTCONST       shift, and go to state 53
    ISMEMBER       shift, and go to state 54
    ISUNDEFINED    shift, and go to state 55
    MULTISETCOUNT  shift, and go to state 56
    NOT            shift, and go to state 57
    '+'            shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60

    designator  go to state 61
    expr        go to state 156


state 106

   93 designator: designator '.' . ID

    ID  shift, and go to state 157


state 107

   94 expr: expr '?' . expr ':' expr

    error          shift, and go to state 49
    FORALL         shift, and go to state 50
    EXISTS         shift, and go to state 51
    ID             shift, and go to state 52
    INTCONST       shift, and go to state 53
    ISMEMBER       shift, and go to state 54
    ISUNDEFINED    shift, and go to state 55
    MULTISETCOUNT  shift, and go to state 56
    NOT            shift, and go to state 57
    '+'            shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60

    designator  go to state 61
    expr        go to state 158


state 108

   95 expr: expr IMPLIES . expr

    error          shift, and go to state 49
    FORALL         shift, and go to state 50
    EXISTS         shift, and go to state 51
    ID             shift, and go to state 52
    INTCONST       shift, and go to state 53
    ISMEMBER       shift, and go to state 54
    ISUNDEFINED    shift, and go to state 55
    MULTISETCOUNT  shift, and go to state 56
    NOT            shift, and go to state 57
    '+'            shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60

    designator  go to state 61
    expr        go to state 159


state 109

   96 expr: expr '|' . expr

    error          shift, and go to state 49
    FORALL         shift, and go to state 50
    EXISTS         shift, and go to state 51
    ID             shift, and go to state 52
    INTCONST       shift, and go to state 53
    ISMEMBER       shift, and go to state 54
    ISUNDEFINED    shift, and go to state 55
    MULTISETCOUNT  shift, and go to state 56
    NOT            shift, and go to state 57
    '+'            shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60

    designator  go to state 61
    expr        go to state 160


state 110

   97 expr: expr '&' . expr

    error          shift, and go to state 49
    FORALL         shift, and go to state 50
    EXISTS         shift, and go to state 51
    ID             shift, and go to state 52
    INTCONST       shift, and go to state 53
    ISMEMBER       shift, and go to state 54
    ISUNDEFINED    shift, and go to state 55
    MULTISETCOUNT  shift, and go to state 56
    NOT            shift, and go to state 57
    '+'            shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60

    designator  go to state 61
    expr        go to state 161


state 111

   99 expr: expr '<' . expr

    error          shift, and go to state 49
    FORALL         shift, and go to state 50
    EXISTS         shift, and go to state 51
    ID             shift, and go to state 52
    INTCONST       shift, and go to state 53
    ISMEMBER       shift, and go to state 54
    ISUNDEFINED    shift, and go to state 55
    MULTISETCOUNT  shift, and go to state 56
    NOT            shift, and go to state 57
    '+'            shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60

    designator  go to state 61
    expr        go to state 162


state 112

  103 expr: expr '=' . expr

    error          shift, and go to state 49
    FORALL         shift, and go to state 50
    EXISTS         shift, and go to state 51
    ID             shift, and go to state 52
    INTCONST       shift, and go to state 53
    ISMEMBER       shift, and go to state 54
    ISUNDEFINED    shift, and go to state 55
    MULTISETCOUNT  shift, and go to state 56
    NOT            shift, and go to state 57
    '+'            shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60

    designator  go to state 61
    expr        go to state 163


state 113

  101 expr: expr '>' . expr

    error          shift, and go to state 49
    FORALL         shift, and go to state 50
    EXISTS         shift, and go to state 51
    ID             shift, and go to state 52
    INTCONST       shift, and go to state 53
    ISMEMBER       shift, and go to state 54
    ISUNDEFINED    shift, and go to state 55
    MULTISETCOUNT  shift, and go to state 56
    NOT            shift, and go to state 57
    '+'            shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60

    designator  go to state 61
    expr        go to state 164


state 114

  102 expr: expr GEQ . expr

    error          shift, and go to state 49
    FORALL         shift, and go to state 50
    EXISTS         shift, and go to state 51
    ID             shift, and go to state 52
    INTCONST       shift, and go to state 53
    ISMEMBER       shift, and go to state 54
    ISUNDEFINED    shift, and go to state 55
    MULTISETCOUNT  shift, and go to state 56
    NOT            shift, and go to state 57
    '+'            shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60

    designator  go to state 61
    expr        go to state 165


state 115

  104 expr: expr NEQ . expr

    error          shift, and go to state 49
    FORALL         shift, and go to state 50
    EXISTS         shift, and go to state 51
    ID             shift, and go to state 52
    INTCONST       shift, and go to state 53
    ISMEMBER       shift, and go to state 54
    ISUNDEFINED    shift, and go to state 55
    MULTISETCOUNT  shift, and go to state 56
    NOT            shift, and go to state 57
    '+'            shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60

    designator  go to state 61
    expr        go to state 166


state 116

  100 expr: expr LEQ . expr

    error          shift, and go to state 49
    FORALL         shift, and go to state 50
    EXISTS         shift, and go to state 51
    ID             shift, and go to state 52
    INTCONST       shift, and go to state 53
    ISMEMBER       shift, and go to state 54
    ISUNDEFINED    shift, and go to state 55
    MULTISETCOUNT  shift, and go to state 56
    NOT            shift, and go to state 57
    '+'            shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60

    designator  go to state 61
    expr        go to state 167


state 117

  105 expr: expr '+' . expr

    error          shift, and go to state 49
    FORALL         shift, and go to state 50
    EXISTS         shift, and go to state 51
    ID             shift, and go to state 52
    INTCONST       shift, and go to state 53
    ISMEMBER       shift, and go to state 54
    ISUNDEFINED    shift, and go to state 55
    MULTISETCOUNT  shift, and go to state 56
    NOT            shift, and go to state 57
    '+'            shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60

    designator  go to state 61
    expr        go to state 168


state 118

  106 expr: expr '-' . expr

    error          shift, and go to state 49
    FORALL         shift, and go to state 50
    EXISTS         shift, and go to state 51
    ID             shift, and go to state 52
    INTCONST       shift, and go to state 53
    ISMEMBER       shift, and go to state 54
    ISUNDEFINED    shift, and go to state 55
    MULTISETCOUNT  shift, and go to state 56
    NOT            shift, and go to state 57
    '+'            shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60

    designator  go to state 61
    expr        go to state 169


state 119

  109 expr: expr '*' . expr

    error          shift, and go to state 49
    FORALL         shift, and go to state 50
    EXISTS         shift, and go to state 51
    ID             shift, and go to state 52
    INTCONST       shift, and go to state 53
    ISMEMBER       shift, and go to state 54
    ISUNDEFINED    shift, and go to state 55
    MULTISETCOUNT  shift, and go to state 56
    NOT            shift, and go to state 57
    '+'            shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60

    designator  go to state 61
    expr        go to state 170


state 120

  110 expr: expr '/' . expr

    error          shift, and go to state 49
    FORALL         shift, and go to state 50
    EXISTS         shift, and go to state 51
    ID             shift, and go to state 52
    INTCONST       shift, and go to state 53
    ISMEMBER       shift, and go to state 54
    ISUNDEFINED    shift, and go to state 55
    MULTISETCOUNT  shift, and go to state 56
    NOT            shift, and go to state 57
    '+'            shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60

    designator  go to state 61
    expr        go to state 171


state 121

  111 expr: expr '%' . expr

    error          shift, and go to state 49
    FORALL         shift, and go to state 50
    EXISTS         shift, and go to state 51
    ID             shift, and go to state 52
    INTCONST       shift, and go to state 53
    ISMEMBER       shift, and go to state 54
    ISUNDEFINED    shift, and go to state 55
    MULTISETCOUNT  shift, and go to state 56
    NOT            shift, and go to state 57
    '+'            shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60

    designator  go to state 61
    expr        go to state 172


state 122

   27 enumtype: ENUM @4 . '{' enums '}'

    '{'  shift, and go to state 173


state 123

   34 recordtype: RECORD optInterleaved . @5 @6 fields endrecord

    $default  reduce using rule 32 (@5)

    @5  go to state 174


state 124

   45 arraytype: ARRAY optInterleaved . '[' typeExpr ']' OF typeExpr

    '['  shift, and go to state 175


state 125

   47 scalarsettype: SCALARSET '(' . expr ')'

    error          shift, and go to state 49
    FORALL         shift, and go to state 50
    EXISTS         shift, and go to state 51
    ID             shift, and go to state 52
    INTCONST       shift, and go to state 53
    ISMEMBER       shift, and go to state 54
    ISUNDEFINED    shift, and go to state 55
    MULTISETCOUNT  shift, and go to state 56
    NOT            shift, and go to state 57
    '+'            shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60

    designator  go to state 61
    expr        go to state 176


state 126

   48 uniontype: UNION '{' . unionlist '}'

    ENUM       shift, and go to state 63
    ID         shift, and go to state 177
    SCALARSET  shift, and go to state 67

    enumtype       go to state 178
    scalarsettype  go to state 179
    unionlist      go to state 180
    unionlistelt   go to state 181


state 127

   46 multisettype: MULTISET optInterleaved . '[' expr ']' OF typeExpr

    '['  shift, and go to state 182


state 128

   31 subrangetype: expr DOTDOT . expr

    error          shift, and go to state 49
    FORALL         shift, and go to state 50
    EXISTS         shift, and go to state 51
    ID             shift, and go to state 52
    INTCONST       shift, and go to state 53
    ISMEMBER       shift, and go to state 54
    ISUNDEFINED    shift, and go to state 55
    MULTISETCOUNT  shift, and go to state 56
    NOT            shift, and go to state 57
    '+'            shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60

    designator  go to state 61
    expr        go to state 183


state 129

   59 vardecltail: ':' typeExpr .

    $default  reduce using rule 59 (vardecltail)


state 130

   58 vardecltail: ',' ID . vardecltail

    ':'  shift, and go to state 80
    ','  shift, and go to state 81

    vardecltail  go to state 184


state 131

   66 procDecl: PROCEDURE ID @9 '(' . optformals ')' semi @10 optdecls @11 optstmts endprocedure semi

    VAR  shift, and go to state 185

    ID        reduce using rule 84 (@17)
    $default  reduce using rule 77 (optformals)

    optformals  go to state 186
    formals     go to state 187
    formal      go to state 188
    @17         go to state 189


state 132

   73 funcDecl: FUNCTION ID @12 '(' . optformals ')' @13 ':' typeExpr semi @14 optdecls @15 optstmts endfunction semi

    VAR  shift, and go to state 185

    ID        reduce using rule 84 (@17)
    $default  reduce using rule 77 (optformals)

    optformals  go to state 190
    formals     go to state 187
    formal      go to state 188
    @17         go to state 189


state 133

  234 optPriority: INTCONST .

    $default  reduce using rule 234 (optPriority)


state 134

  225 simplerule: RULE optFair optPriority . optString optCondition @29 optdecls optstmts endrule

    STRING  shift, and go to state 90

    $default  reduce using rule 233 (optString)

    optString  go to state 191


state 135

  136 quantifier: ID . ':' typeExpr
  137           | ID . ASSIGN expr TO expr optBy

    ASSIGN  shift, and go to state 192
    ':'     shift, and go to state 193


state 136

  138 quantifiers: quantifier . ';' quantifiers
  139            | quantifier .

    ';'  shift, and go to state 194

    $default  reduce using rule 139 (quantifiers)


state 137

  239 ruleset: RULESET @31 quantifiers . do rules endruleset

    DO   shift, and go to state 195
    ':'  shift, and go to state 196

    do  go to state 197


state 138

  210 alias: ID . ':' expr

    ':'  shift, and go to state 198


state 139

  206 aliases: aliases . semi alias
  207        | aliases . semi
  208        | aliases . ',' alias
  237 aliasrule: ALIAS @30 aliases . do rules endalias

    DO   shift, and go to state 195
    ':'  shift, and go to state 196
    ';'  shift, and go to state 26
    ','  shift, and go to state 199

    semi  go to state 200
    do    go to state 201


state 140

  209 aliases: alias .

    $default  reduce using rule 209 (aliases)


state 141

  248 startstate: STARTSTATE @34 optString . optdecls optstmts endstartstate

    bEGIN     reduce using rule 6 (decls)
    CONST     reduce using rule 6 (decls)
    TYPE      reduce using rule 6 (decls)
    VAR       reduce using rule 6 (decls)
    $default  reduce using rule 90 (optdecls)

    decls     go to state 202
    optdecls  go to state 203


state 142

   94 expr: expr . '?' expr ':' expr
   95     | expr . IMPLIES expr
   96     | expr . '|' expr
   97     | expr . '&' expr
   99     | expr . '<' expr
  100     | expr . LEQ expr
  101     | expr . '>' expr
  102     | expr . GEQ expr
  103     | expr . '=' expr
  104     | expr . NEQ expr
  105     | expr . '+' expr
  106     | expr . '-' expr
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . '%' expr
  251 invariant: INVARIANT optString expr .

    '?'      shift, and go to state 107
    IMPLIES  shift, and go to state 108
    '|'      shift, and go to state 109
    '&'      shift, and go to state 110
    '<'      shift, and go to state 111
    '='      shift, and go to state 112
    '>'      shift, and go to state 113
    GEQ      shift, and go to state 114
    NEQ      shift, and go to state 115
    LEQ      shift, and go to state 116
    '+'      shift, and go to state 117
    '-'      shift, and go to state 118
    '*'      shift, and go to state 119
    '/'      shift, and go to state 120
    '%'      shift, and go to state 121

    $default  reduce using rule 251 (invariant)


state 143

  244 choose: CHOOSE @32 ID . ':' designator @33 do rules endchoose

    ':'  shift, and go to state 204


state 144

  214 rules: rule semi rules .

    $default  reduce using rule 214 (rules)


state 145

  119 expr: FORALL @18 quantifiers . do expr endforall

    DO   shift, and go to state 195
    ':'  shift, and go to state 196

    do  go to state 205


state 146

  121 expr: EXISTS @19 quantifiers . do expr endexists

    DO   shift, and go to state 195
    ':'  shift, and go to state 196

    do  go to state 206


state 147

  135 exprlist: UNDEFINED .

    $default  reduce using rule 135 (exprlist)


state 148

  131 actuals: '(' ')' .

    $default  reduce using rule 131 (actuals)


state 149

   94 expr: expr . '?' expr ':' expr
   95     | expr . IMPLIES expr
   96     | expr . '|' expr
   97     | expr . '&' expr
   99     | expr . '<' expr
  100     | expr . LEQ expr
  101     | expr . '>' expr
  102     | expr . GEQ expr
  103     | expr . '=' expr
  104     | expr . NEQ expr
  105     | expr . '+' expr
  106     | expr . '-' expr
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . '%' expr
  133 exprlist: expr .

    '?'      shift, and go to state 107
    IMPLIES  shift, and go to state 108
    '|'      shift, and go to state 109
    '&'      shift, and go to state 110
    '<'      shift, and go to state 111
    '='      shift, and go to state 112
    '>'      shift, and go to state 113
    GEQ      shift, and go to state 114
    NEQ      shift, and go to state 115
    LEQ      shift, and go to state 116
    '+'      shift, and go to state 117
    '-'      shift, and go to state 118
    '*'      shift, and go to state 119
    '/'      shift, and go to state 120
    '%'      shift, and go to state 121

    $default  reduce using rule 133 (exprlist)


state 150

  130 actuals: '(' exprlist . ')'
  132 exprlist: exprlist . ',' expr
  134         | exprlist . ',' UNDEFINED

    ','  shift, and go to state 207
    ')'  shift, and go to state 208


state 151

   91 designator: ID .

    $default  reduce using rule 91 (designator)


state 152

   92 designator: designator . '[' expr ']'
   93           | designator . '.' ID
  116 expr: ISMEMBER '(' designator . ',' typeExpr ')'

    ','  shift, and go to state 209
    '['  shift, and go to state 105
    '.'  shift, and go to state 106


state 153

   92 designator: designator . '[' expr ']'
   93           | designator . '.' ID
  115 expr: ISUNDEFINED '(' designator . ')'

    '['  shift, and go to state 105
    ')'  shift, and go to state 210
    '.'  shift, and go to state 106


state 154

  125 expr: MULTISETCOUNT '(' @20 . ID ':' designator ',' @21 expr ')'

    ID  shift, and go to state 211


state 155

  117 expr: '(' expr ')' .

    $default  reduce using rule 117 (expr)


state 156

   92 designator: designator '[' expr . ']'
   94 expr: expr . '?' expr ':' expr
   95     | expr . IMPLIES expr
   96     | expr . '|' expr
   97     | expr . '&' expr
   99     | expr . '<' expr
  100     | expr . LEQ expr
  101     | expr . '>' expr
  102     | expr . GEQ expr
  103     | expr . '=' expr
  104     | expr . NEQ expr
  105     | expr . '+' expr
  106     | expr . '-' expr
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . '%' expr

    '?'      shift, and go to state 107
    IMPLIES  shift, and go to state 108
    '|'      shift, and go to state 109
    '&'      shift, and go to state 110
    '<'      shift, and go to state 111
    '='      shift, and go to state 112
    '>'      shift, and go to state 113
    GEQ      shift, and go to state 114
    NEQ      shift, and go to state 115
    LEQ      shift, and go to state 116
    '+'      shift, and go to state 117
    '-'      shift, and go to state 118
    '*'      shift, and go to state 119
    '/'      shift, and go to state 120
    '%'      shift, and go to state 121
    ']'      shift, and go to state 212


state 157

   93 designator: designator '.' ID .

    $default  reduce using rule 93 (designator)


state 158

   94 expr: expr . '?' expr ':' expr
   94     | expr '?' expr . ':' expr
   95     | expr . IMPLIES expr
   96     | expr . '|' expr
   97     | expr . '&' expr
   99     | expr . '<' expr
  100     | expr . LEQ expr
  101     | expr . '>' expr
  102     | expr . GEQ expr
  103     | expr . '=' expr
  104     | expr . NEQ expr
  105     | expr . '+' expr
  106     | expr . '-' expr
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . '%' expr

    '?'      shift, and go to state 107
    ':'      shift, and go to state 213
    IMPLIES  shift, and go to state 108
    '|'      shift, and go to state 109
    '&'      shift, and go to state 110
    '<'      shift, and go to state 111
    '='      shift, and go to state 112
    '>'      shift, and go to state 113
    GEQ      shift, and go to state 114
    NEQ      shift, and go to state 115
    LEQ      shift, and go to state 116
    '+'      shift, and go to state 117
    '-'      shift, and go to state 118
    '*'      shift, and go to state 119
    '/'      shift, and go to state 120
    '%'      shift, and go to state 121


state 159

   94 expr: expr . '?' expr ':' expr
   95     | expr . IMPLIES expr
   95     | expr IMPLIES expr .
   96     | expr . '|' expr
   97     | expr . '&' expr
   99     | expr . '<' expr
  100     | expr . LEQ expr
  101     | expr . '>' expr
  102     | expr . GEQ expr
  103     | expr . '=' expr
  104     | expr . NEQ expr
  105     | expr . '+' expr
  106     | expr . '-' expr
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . '%' expr

    '|'  shift, and go to state 109
    '&'  shift, and go to state 110
    '<'  shift, and go to state 111
    '='  shift, and go to state 112
    '>'  shift, and go to state 113
    GEQ  shift, and go to state 114
    NEQ  shift, and go to state 115
    LEQ  shift, and go to state 116
    '+'  shift, and go to state 117
    '-'  shift, and go to state 118
    '*'  shift, and go to state 119
    '/'  shift, and go to state 120
    '%'  shift, and go to state 121

    IMPLIES  error (nonassociative)

    $default  reduce using rule 95 (expr)


state 160

   94 expr: expr . '?' expr ':' expr
   95     | expr . IMPLIES expr
   96     | expr . '|' expr
   96     | expr '|' expr .
   97     | expr . '&' expr
   99     | expr . '<' expr
  100     | expr . LEQ expr
  101     | expr . '>' expr
  102     | expr . GEQ expr
  103     | expr . '=' expr
  104     | expr . NEQ expr
  105     | expr . '+' expr
  106     | expr . '-' expr
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . '%' expr

    '&'  shift, and go to state 110
    '<'  shift, and go to state 111
    '='  shift, and go to state 112
    '>'  shift, and go to state 113
    GEQ  shift, and go to state 114
    NEQ  shift, and go to state 115
    LEQ  shift, and go to state 116
    '+'  shift, and go to state 117
    '-'  shift, and go to state 118
    '*'  shift, and go to state 119
    '/'  shift, and go to state 120
    '%'  shift, and go to state 121

    $default  reduce using rule 96 (expr)


state 161

   94 expr: expr . '?' expr ':' expr
   95     | expr . IMPLIES expr
   96     | expr . '|' expr
   97     | expr . '&' expr
   97     | expr '&' expr .
   99     | expr . '<' expr
  100     | expr . LEQ expr
  101     | expr . '>' expr
  102     | expr . GEQ expr
  103     | expr . '=' expr
  104     | expr . NEQ expr
  105     | expr . '+' expr
  106     | expr . '-' expr
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . '%' expr

    '<'  shift, and go to state 111
    '='  shift, and go to state 112
    '>'  shift, and go to state 113
    GEQ  shift, and go to state 114
    NEQ  shift, and go to state 115
    LEQ  shift, and go to state 116
    '+'  shift, and go to state 117
    '-'  shift, and go to state 118
    '*'  shift, and go to state 119
    '/'  shift, and go to state 120
    '%'  shift, and go to state 121

    $default  reduce using rule 97 (expr)


state 162

   94 expr: expr . '?' expr ':' expr
   95     | expr . IMPLIES expr
   96     | expr . '|' expr
   97     | expr . '&' expr
   99     | expr . '<' expr
   99     | expr '<' expr .
  100     | expr . LEQ expr
  101     | expr . '>' expr
  102     | expr . GEQ expr
  103     | expr . '=' expr
  104     | expr . NEQ expr
  105     | expr . '+' expr
  106     | expr . '-' expr
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . '%' expr

    '+'  shift, and go to state 117
    '-'  shift, and go to state 118
    '*'  shift, and go to state 119
    '/'  shift, and go to state 120
    '%'  shift, and go to state 121

    '<'  error (nonassociative)
    '='  error (nonassociative)
    '>'  error (nonassociative)
    GEQ  error (nonassociative)
    NEQ  error (nonassociative)
    LEQ  error (nonassociative)

    $default  reduce using rule 99 (expr)


state 163

   94 expr: expr . '?' expr ':' expr
   95     | expr . IMPLIES expr
   96     | expr . '|' expr
   97     | expr . '&' expr
   99     | expr . '<' expr
  100     | expr . LEQ expr
  101     | expr . '>' expr
  102     | expr . GEQ expr
  103     | expr . '=' expr
  103     | expr '=' expr .
  104     | expr . NEQ expr
  105     | expr . '+' expr
  106     | expr . '-' expr
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . '%' expr

    '+'  shift, and go to state 117
    '-'  shift, and go to state 118
    '*'  shift, and go to state 119
    '/'  shift, and go to state 120
    '%'  shift, and go to state 121

    '<'  error (nonassociative)
    '='  error (nonassociative)
    '>'  error (nonassociative)
    GEQ  error (nonassociative)
    NEQ  error (nonassociative)
    LEQ  error (nonassociative)

    $default  reduce using rule 103 (expr)


state 164

   94 expr: expr . '?' expr ':' expr
   95     | expr . IMPLIES expr
   96     | expr . '|' expr
   97     | expr . '&' expr
   99     | expr . '<' expr
  100     | expr . LEQ expr
  101     | expr . '>' expr
  101     | expr '>' expr .
  102     | expr . GEQ expr
  103     | expr . '=' expr
  104     | expr . NEQ expr
  105     | expr . '+' expr
  106     | expr . '-' expr
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . '%' expr

    '+'  shift, and go to state 117
    '-'  shift, and go to state 118
    '*'  shift, and go to state 119
    '/'  shift, and go to state 120
    '%'  shift, and go to state 121

    '<'  error (nonassociative)
    '='  error (nonassociative)
    '>'  error (nonassociative)
    GEQ  error (nonassociative)
    NEQ  error (nonassociative)
    LEQ  error (nonassociative)

    $default  reduce using rule 101 (expr)


state 165

   94 expr: expr . '?' expr ':' expr
   95     | expr . IMPLIES expr
   96     | expr . '|' expr
   97     | expr . '&' expr
   99     | expr . '<' expr
  100     | expr . LEQ expr
  101     | expr . '>' expr
  102     | expr . GEQ expr
  102     | expr GEQ expr .
  103     | expr . '=' expr
  104     | expr . NEQ expr
  105     | expr . '+' expr
  106     | expr . '-' expr
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . '%' expr

    '+'  shift, and go to state 117
    '-'  shift, and go to state 118
    '*'  shift, and go to state 119
    '/'  shift, and go to state 120
    '%'  shift, and go to state 121

    '<'  error (nonassociative)
    '='  error (nonassociative)
    '>'  error (nonassociative)
    GEQ  error (nonassociative)
    NEQ  error (nonassociative)
    LEQ  error (nonassociative)

    $default  reduce using rule 102 (expr)


state 166

   94 expr: expr . '?' expr ':' expr
   95     | expr . IMPLIES expr
   96     | expr . '|' expr
   97     | expr . '&' expr
   99     | expr . '<' expr
  100     | expr . LEQ expr
  101     | expr . '>' expr
  102     | expr . GEQ expr
  103     | expr . '=' expr
  104     | expr . NEQ expr
  104     | expr NEQ expr .
  105     | expr . '+' expr
  106     | expr . '-' expr
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . '%' expr

    '+'  shift, and go to state 117
    '-'  shift, and go to state 118
    '*'  shift, and go to state 119
    '/'  shift, and go to state 120
    '%'  shift, and go to state 121

    '<'  error (nonassociative)
    '='  error (nonassociative)
    '>'  error (nonassociative)
    GEQ  error (nonassociative)
    NEQ  error (nonassociative)
    LEQ  error (nonassociative)

    $default  reduce using rule 104 (expr)


state 167

   94 expr: expr . '?' expr ':' expr
   95     | expr . IMPLIES expr
   96     | expr . '|' expr
   97     | expr . '&' expr
   99     | expr . '<' expr
  100     | expr . LEQ expr
  100     | expr LEQ expr .
  101     | expr . '>' expr
  102     | expr . GEQ expr
  103     | expr . '=' expr
  104     | expr . NEQ expr
  105     | expr . '+' expr
  106     | expr . '-' expr
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . '%' expr

    '+'  shift, and go to state 117
    '-'  shift, and go to state 118
    '*'  shift, and go to state 119
    '/'  shift, and go to state 120
    '%'  shift, and go to state 121

    '<'  error (nonassociative)
    '='  error (nonassociative)
    '>'  error (nonassociative)
    GEQ  error (nonassociative)
    NEQ  error (nonassociative)
    LEQ  error (nonassociative)

    $default  reduce using rule 100 (expr)


state 168

   94 expr: expr . '?' expr ':' expr
   95     | expr . IMPLIES expr
   96     | expr . '|' expr
   97     | expr . '&' expr
   99     | expr . '<' expr
  100     | expr . LEQ expr
  101     | expr . '>' expr
  102     | expr . GEQ expr
  103     | expr . '=' expr
  104     | expr . NEQ expr
  105     | expr . '+' expr
  105     | expr '+' expr .
  106     | expr . '-' expr
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . '%' expr

    '*'  shift, and go to state 119
    '/'  shift, and go to state 120
    '%'  shift, and go to state 121

    $default  reduce using rule 105 (expr)


state 169

   94 expr: expr . '?' expr ':' expr
   95     | expr . IMPLIES expr
   96     | expr . '|' expr
   97     | expr . '&' expr
   99     | expr . '<' expr
  100     | expr . LEQ expr
  101     | expr . '>' expr
  102     | expr . GEQ expr
  103     | expr . '=' expr
  104     | expr . NEQ expr
  105     | expr . '+' expr
  106     | expr . '-' expr
  106     | expr '-' expr .
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . '%' expr

    '*'  shift, and go to state 119
    '/'  shift, and go to state 120
    '%'  shift, and go to state 121

    $default  reduce using rule 106 (expr)


state 170

   94 expr: expr . '?' expr ':' expr
   95     | expr . IMPLIES expr
   96     | expr . '|' expr
   97     | expr . '&' expr
   99     | expr . '<' expr
  100     | expr . LEQ expr
  101     | expr . '>' expr
  102     | expr . GEQ expr
  103     | expr . '=' expr
  104     | expr . NEQ expr
  105     | expr . '+' expr
  106     | expr . '-' expr
  109     | expr . '*' expr
  109     | expr '*' expr .
  110     | expr . '/' expr
  111     | expr . '%' expr

    $default  reduce using rule 109 (expr)


state 171

   94 expr: expr . '?' expr ':' expr
   95     | expr . IMPLIES expr
   96     | expr . '|' expr
   97     | expr . '&' expr
   99     | expr . '<' expr
  100     | expr . LEQ expr
  101     | expr . '>' expr
  102     | expr . GEQ expr
  103     | expr . '=' expr
  104     | expr . NEQ expr
  105     | expr . '+' expr
  106     | expr . '-' expr
  109     | expr . '*' expr
  110     | expr . '/' expr
  110     | expr '/' expr .
  111     | expr . '%' expr

    $default  reduce using rule 110 (expr)


state 172

   94 expr: expr . '?' expr ':' expr
   95     | expr . IMPLIES expr
   96     | expr . '|' expr
   97     | expr . '&' expr
   99     | expr . '<' expr
  100     | expr . LEQ expr
  101     | expr . '>' expr
  102     | expr . GEQ expr
  103     | expr . '=' expr
  104     | expr . NEQ expr
  105     | expr . '+' expr
  106     | expr . '-' expr
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . '%' expr
  111     | expr '%' expr .

    $default  reduce using rule 111 (expr)


state 173

   27 enumtype: ENUM @4 '{' . enums '}'

    ID  shift, and go to state 214

    enums  go to state 215


state 174

   34 recordtype: RECORD optInterleaved @5 . @6 fields endrecord

    $default  reduce using rule 33 (@6)

    @6  go to state 216


state 175

   45 arraytype: ARRAY optInterleaved '[' . typeExpr ']' OF typeExpr

    error          shift, and go to state 49
    FORALL         shift, and go to state 50
    EXISTS         shift, and go to state 51
    ENUM           shift, and go to state 63
    RECORD         shift, and go to state 64
    ARRAY          shift, and go to state 65
    ID             shift, and go to state 66
    INTCONST       shift, and go to state 53
    SCALARSET      shift, and go to state 67
    ISMEMBER       shift, and go to state 54
    ISUNDEFINED    shift, and go to state 55
    UNION          shift, and go to state 68
    MULTISET       shift, and go to state 69
    MULTISETCOUNT  shift, and go to state 56
    NOT            shift, and go to state 57
    '+'            shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60

    typeExpr       go to state 217
    typeid         go to state 71
    enumtype       go to state 72
    subrangetype   go to state 73
    recordtype     go to state 74
    arraytype      go to state 75
    multisettype   go to state 76
    scalarsettype  go to state 77
    uniontype      go to state 78
    designator     go to state 61
    expr           go to state 79


state 176

   47 scalarsettype: SCALARSET '(' expr . ')'
   94 expr: expr . '?' expr ':' expr
   95     | expr . IMPLIES expr
   96     | expr . '|' expr
   97     | expr . '&' expr
   99     | expr . '<' expr
  100     | expr . LEQ expr
  101     | expr . '>' expr
  102     | expr . GEQ expr
  103     | expr . '=' expr
  104     | expr . NEQ expr
  105     | expr . '+' expr
  106     | expr . '-' expr
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . '%' expr

    '?'      shift, and go to state 107
    IMPLIES  shift, and go to state 108
    '|'      shift, and go to state 109
    '&'      shift, and go to state 110
    '<'      shift, and go to state 111
    '='      shift, and go to state 112
    '>'      shift, and go to state 113
    GEQ      shift, and go to state 114
    NEQ      shift, and go to state 115
    LEQ      shift, and go to state 116
    '+'      shift, and go to state 117
    '-'      shift, and go to state 118
    '*'      shift, and go to state 119
    '/'      shift, and go to state 120
    '%'      shift, and go to state 121
    ')'      shift, and go to state 218


state 177

   51 unionlistelt: ID .

    $default  reduce using rule 51 (unionlistelt)


state 178

   53 unionlistelt: enumtype .

    $default  reduce using rule 53 (unionlistelt)


state 179

   52 unionlistelt: scalarsettype .

    $default  reduce using rule 52 (unionlistelt)


state 180

   48 uniontype: UNION '{' unionlist . '}'
   49 unionlist: unionlist . ',' unionlistelt

    '}'  shift, and go to state 219
    ','  shift, and go to state 220


state 181

   50 unionlist: unionlistelt . ',' unionlistelt

    ','  shift, and go to state 221


state 182

   46 multisettype: MULTISET optInterleaved '[' . expr ']' OF typeExpr

    error          shift, and go to state 49
    FORALL         shift, and go to state 50
    EXISTS         shift, and go to state 51
    ID             shift, and go to state 52
    INTCONST       shift, and go to state 53
    ISMEMBER       shift, and go to state 54
    ISUNDEFINED    shift, and go to state 55
    MULTISETCOUNT  shift, and go to state 56
    NOT            shift, and go to state 57
    '+'            shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60

    designator  go to state 61
    expr        go to state 222


state 183

   31 subrangetype: expr DOTDOT expr .
   94 expr: expr . '?' expr ':' expr
   95     | expr . IMPLIES expr
   96     | expr . '|' expr
   97     | expr . '&' expr
   99     | expr . '<' expr
  100     | expr . LEQ expr
  101     | expr . '>' expr
  102     | expr . GEQ expr
  103     | expr . '=' expr
  104     | expr . NEQ expr
  105     | expr . '+' expr
  106     | expr . '-' expr
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . '%' expr

    '?'      shift, and go to state 107
    IMPLIES  shift, and go to state 108
    '|'      shift, and go to state 109
    '&'      shift, and go to state 110
    '<'      shift, and go to state 111
    '='      shift, and go to state 112
    '>'      shift, and go to state 113
    GEQ      shift, and go to state 114
    NEQ      shift, and go to state 115
    LEQ      shift, and go to state 116
    '+'      shift, and go to state 117
    '-'      shift, and go to state 118
    '*'      shift, and go to state 119
    '/'      shift, and go to state 120
    '%'      shift, and go to state 121

    $default  reduce using rule 31 (subrangetype)


state 184

   58 vardecltail: ',' ID vardecltail .

    $default  reduce using rule 58 (vardecltail)


state 185

   83 formal: VAR . @16 formalrest

    $default  reduce using rule 82 (@16)

    @16  go to state 223


state 186

   66 procDecl: PROCEDURE ID @9 '(' optformals . ')' semi @10 optdecls @11 optstmts endprocedure semi

    ')'  shift, and go to state 224


state 187

   76 optformals: formals .
   78 formals: formals . semi formal
   79        | formals . semi
   81        | formals . ',' formal

    ';'  shift, and go to state 26
    ','  shift, and go to state 225

    $default  reduce using rule 76 (optformals)

    semi  go to state 226


state 188

   80 formals: formal .

    $default  reduce using rule 80 (formals)


state 189

   85 formal: @17 . formalrest

    ID  shift, and go to state 227

    formalrest  go to state 228


state 190

   73 funcDecl: FUNCTION ID @12 '(' optformals . ')' @13 ':' typeExpr semi @14 optdecls @15 optstmts endfunction semi

    ')'  shift, and go to state 229


state 191

  225 simplerule: RULE optFair optPriority optString . optCondition @29 optdecls optstmts endrule

    error          shift, and go to state 49
    FORALL         shift, and go to state 50
    EXISTS         shift, and go to state 51
    ID             shift, and go to state 52
    INTCONST       shift, and go to state 53
    ISMEMBER       shift, and go to state 54
    ISUNDEFINED    shift, and go to state 55
    MULTISETCOUNT  shift, and go to state 56
    NOT            shift, and go to state 57
    '+'            shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60

    END                 reduce using rule 231 (optCondition)
    ENDRULE             reduce using rule 231 (optCondition)
    ALIAS               reduce using rule 231 (optCondition)
    IF                  reduce using rule 231 (optCondition)
    SWITCH              reduce using rule 231 (optCondition)
    FOR                 reduce using rule 231 (optCondition)
    WHILE               reduce using rule 231 (optCondition)
    RETURN              reduce using rule 231 (optCondition)
    bEGIN               reduce using rule 231 (optCondition)
    CLEAR               reduce using rule 231 (optCondition)
    ERROR               reduce using rule 231 (optCondition)
    ASSERT              reduce using rule 231 (optCondition)
    PUT                 reduce using rule 231 (optCondition)
    CONST               reduce using rule 231 (optCondition)
    TYPE                reduce using rule 231 (optCondition)
    VAR                 reduce using rule 231 (optCondition)
    ID                  [reduce using rule 231 (optCondition)]
    UNDEFINE            reduce using rule 231 (optCondition)
    MULTISETREMOVE      reduce using rule 231 (optCondition)
    MULTISETREMOVEPRED  reduce using rule 231 (optCondition)
    MULTISETADD         reduce using rule 231 (optCondition)

    designator    go to state 61
    expr          go to state 230
    optCondition  go to state 231


state 192

  137 quantifier: ID ASSIGN . expr TO expr optBy

    error          shift, and go to state 49
    FORALL         shift, and go to state 50
    EXISTS         shift, and go to state 51
    ID             shift, and go to state 52
    INTCONST       shift, and go to state 53
    ISMEMBER       shift, and go to state 54
    ISUNDEFINED    shift, and go to state 55
    MULTISETCOUNT  shift, and go to state 56
    NOT            shift, and go to state 57
    '+'            shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60

    designator  go to state 61
    expr        go to state 232


state 193

  136 quantifier: ID ':' . typeExpr

    error          shift, and go to state 49
    FORALL         shift, and go to state 50
    EXISTS         shift, and go to state 51
    ENUM           shift, and go to state 63
    RECORD         shift, and go to state 64
    ARRAY          shift, and go to state 65
    ID             shift, and go to state 66
    INTCONST       shift, and go to state 53
    SCALARSET      shift, and go to state 67
    ISMEMBER       shift, and go to state 54
    ISUNDEFINED    shift, and go to state 55
    UNION          shift, and go to state 68
    MULTISET       shift, and go to state 69
    MULTISETCOUNT  shift, and go to state 56
    NOT            shift, and go to state 57
    '+'            shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60

    typeExpr       go to state 233
    typeid         go to state 71
    enumtype       go to state 72
    subrangetype   go to state 73
    recordtype     go to state 74
    arraytype      go to state 75
    multisettype   go to state 76
    scalarsettype  go to state 77
    uniontype      go to state 78
    designator     go to state 61
    expr           go to state 79


state 194

  138 quantifiers: quantifier ';' . quantifiers

    ID  shift, and go to state 135

    quantifier   go to state 136
    quantifiers  go to state 234


state 195

  140 do: DO .

    $default  reduce using rule 140 (do)


state 196

  141 do: ':' .

    $default  reduce using rule 141 (do)


state 197

  239 ruleset: RULESET @31 quantifiers do . rules endruleset

    error       shift, and go to state 34
    RULE        shift, and go to state 35
    RULESET     shift, and go to state 36
    ALIAS       shift, and go to state 37
    STARTSTATE  shift, and go to state 38
    INVARIANT   shift, and go to state 39
    CHOOSE      shift, and go to state 40

    rules       go to state 235
    rule        go to state 42
    simplerule  go to state 43
    aliasrule   go to state 44
    ruleset     go to state 45
    choose      go to state 46
    startstate  go to state 47
    invariant   go to state 48


state 198

  210 alias: ID ':' . expr

    error          shift, and go to state 49
    FORALL         shift, and go to state 50
    EXISTS         shift, and go to state 51
    ID             shift, and go to state 52
    INTCONST       shift, and go to state 53
    ISMEMBER       shift, and go to state 54
    ISUNDEFINED    shift, and go to state 55
    MULTISETCOUNT  shift, and go to state 56
    NOT            shift, and go to state 57
    '+'            shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60

    designator  go to state 61
    expr        go to state 236


state 199

  208 aliases: aliases ',' . alias

    ID  shift, and go to state 138

    alias  go to state 237


state 200

  206 aliases: aliases semi . alias
  207        | aliases semi .

    ID  shift, and go to state 138

    $default  reduce using rule 207 (aliases)

    alias  go to state 238


state 201

  237 aliasrule: ALIAS @30 aliases do . rules endalias

    error       shift, and go to state 34
    RULE        shift, and go to state 35
    RULESET     shift, and go to state 36
    ALIAS       shift, and go to state 37
    STARTSTATE  shift, and go to state 38
    INVARIANT   shift, and go to state 39
    CHOOSE      shift, and go to state 40

    rules       go to state 239
    rule        go to state 42
    simplerule  go to state 43
    aliasrule   go to state 44
    ruleset     go to state 45
    choose      go to state 46
    startstate  go to state 47
    invariant   go to state 48


state 202

    5 decls: decls . decl
   89 optdecls: decls . bEGIN

    bEGIN  shift, and go to state 240
    CONST  shift, and go to state 5
    TYPE   shift, and go to state 6
    VAR    shift, and go to state 7

    decl  go to state 9


state 203

  248 startstate: STARTSTATE @34 optString optdecls . optstmts endstartstate

    END            reduce using rule 146 (optstmts)
    ENDSTARTSTATE  reduce using rule 146 (optstmts)
    $default       reduce using rule 144 (@22)

    optstmts  go to state 241
    @22       go to state 242


state 204

  244 choose: CHOOSE @32 ID ':' . designator @33 do rules endchoose

    ID  shift, and go to state 151

    designator  go to state 243


state 205

  119 expr: FORALL @18 quantifiers do . expr endforall

    error          shift, and go to state 49
    FORALL         shift, and go to state 50
    EXISTS         shift, and go to state 51
    ID             shift, and go to state 52
    INTCONST       shift, and go to state 53
    ISMEMBER       shift, and go to state 54
    ISUNDEFINED    shift, and go to state 55
    MULTISETCOUNT  shift, and go to state 56
    NOT            shift, and go to state 57
    '+'            shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60

    designator  go to state 61
    expr        go to state 244


state 206

  121 expr: EXISTS @19 quantifiers do . expr endexists

    error          shift, and go to state 49
    FORALL         shift, and go to state 50
    EXISTS         shift, and go to state 51
    ID             shift, and go to state 52
    INTCONST       shift, and go to state 53
    ISMEMBER       shift, and go to state 54
    ISUNDEFINED    shift, and go to state 55
    MULTISETCOUNT  shift, and go to state 56
    NOT            shift, and go to state 57
    '+'            shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60

    designator  go to state 61
    expr        go to state 245


state 207

  132 exprlist: exprlist ',' . expr
  134         | exprlist ',' . UNDEFINED

    error          shift, and go to state 49
    FORALL         shift, and go to state 50
    EXISTS         shift, and go to state 51
    ID             shift, and go to state 52
    INTCONST       shift, and go to state 53
    ISMEMBER       shift, and go to state 54
    ISUNDEFINED    shift, and go to state 55
    UNDEFINED      shift, and go to state 246
    MULTISETCOUNT  shift, and go to state 56
    NOT            shift, and go to state 57
    '+'            shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60

    designator  go to state 61
    expr        go to state 247


state 208

  130 actuals: '(' exprlist ')' .

    $default  reduce using rule 130 (actuals)


state 209

  116 expr: ISMEMBER '(' designator ',' . typeExpr ')'

    error          shift, and go to state 49
    FORALL         shift, and go to state 50
    EXISTS         shift, and go to state 51
    ENUM           shift, and go to state 63
    RECORD         shift, and go to state 64
    ARRAY          shift, and go to state 65
    ID             shift, and go to state 66
    INTCONST       shift, and go to state 53
    SCALARSET      shift, and go to state 67
    ISMEMBER       shift, and go to state 54
    ISUNDEFINED    shift, and go to state 55
    UNION          shift, and go to state 68
    MULTISET       shift, and go to state 69
    MULTISETCOUNT  shift, and go to state 56
    NOT            shift, and go to state 57
    '+'            shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60

    typeExpr       go to state 248
    typeid         go to state 71
    enumtype       go to state 72
    subrangetype   go to state 73
    recordtype     go to state 74
    arraytype      go to state 75
    multisettype   go to state 76
    scalarsettype  go to state 77
    uniontype      go to state 78
    designator     go to state 61
    expr           go to state 79


state 210

  115 expr: ISUNDEFINED '(' designator ')' .

    $default  reduce using rule 115 (expr)


state 211

  125 expr: MULTISETCOUNT '(' @20 ID . ':' designator ',' @21 expr ')'

    ':'  shift, and go to state 249


state 212

   92 designator: designator '[' expr ']' .

    $default  reduce using rule 92 (designator)


state 213

   94 expr: expr '?' expr ':' . expr

    error          shift, and go to state 49
    FORALL         shift, and go to state 50
    EXISTS         shift, and go to state 51
    ID             shift, and go to state 52
    INTCONST       shift, and go to state 53
    ISMEMBER       shift, and go to state 54
    ISUNDEFINED    shift, and go to state 55
    MULTISETCOUNT  shift, and go to state 56
    NOT            shift, and go to state 57
    '+'            shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60

    designator  go to state 61
    expr        go to state 250


state 214

   30 enums: ID .

    $default  reduce using rule 30 (enums)


state 215

   27 enumtype: ENUM @4 '{' enums . '}'
   28 enums: enums . ',' ID
   29      | enums . ID

    ID   shift, and go to state 251
    '}'  shift, and go to state 252
    ','  shift, and go to state 253


state 216

   34 recordtype: RECORD optInterleaved @5 @6 . fields endrecord

    $default  reduce using rule 41 (@7)

    fields  go to state 254
    field   go to state 255
    @7      go to state 256


state 217

   45 arraytype: ARRAY optInterleaved '[' typeExpr . ']' OF typeExpr

    ']'  shift, and go to state 257


state 218

   47 scalarsettype: SCALARSET '(' expr ')' .

    $default  reduce using rule 47 (scalarsettype)


state 219

   48 uniontype: UNION '{' unionlist '}' .

    $default  reduce using rule 48 (uniontype)


state 220

   49 unionlist: unionlist ',' . unionlistelt

    ENUM       shift, and go to state 63
    ID         shift, and go to state 177
    SCALARSET  shift, and go to state 67

    enumtype       go to state 178
    scalarsettype  go to state 179
    unionlistelt   go to state 258


state 221

   50 unionlist: unionlistelt ',' . unionlistelt

    ENUM       shift, and go to state 63
    ID         shift, and go to state 177
    SCALARSET  shift, and go to state 67

    enumtype       go to state 178
    scalarsettype  go to state 179
    unionlistelt   go to state 259


state 222

   46 multisettype: MULTISET optInterleaved '[' expr . ']' OF typeExpr
   94 expr: expr . '?' expr ':' expr
   95     | expr . IMPLIES expr
   96     | expr . '|' expr
   97     | expr . '&' expr
   99     | expr . '<' expr
  100     | expr . LEQ expr
  101     | expr . '>' expr
  102     | expr . GEQ expr
  103     | expr . '=' expr
  104     | expr . NEQ expr
  105     | expr . '+' expr
  106     | expr . '-' expr
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . '%' expr

    '?'      shift, and go to state 107
    IMPLIES  shift, and go to state 108
    '|'      shift, and go to state 109
    '&'      shift, and go to state 110
    '<'      shift, and go to state 111
    '='      shift, and go to state 112
    '>'      shift, and go to state 113
    GEQ      shift, and go to state 114
    NEQ      shift, and go to state 115
    LEQ      shift, and go to state 116
    '+'      shift, and go to state 117
    '-'      shift, and go to state 118
    '*'      shift, and go to state 119
    '/'      shift, and go to state 120
    '%'      shift, and go to state 121
    ']'      shift, and go to state 260


state 223

   83 formal: VAR @16 . formalrest

    ID  shift, and go to state 227

    formalrest  go to state 261


state 224

   66 procDecl: PROCEDURE ID @9 '(' optformals ')' . semi @10 optdecls @11 optstmts endprocedure semi

    ';'  shift, and go to state 26

    semi  go to state 262


state 225

   81 formals: formals ',' . formal

    VAR  shift, and go to state 185

    $default  reduce using rule 84 (@17)

    formal  go to state 263
    @17     go to state 189


state 226

   78 formals: formals semi . formal
   79        | formals semi .

    VAR  shift, and go to state 185

    ID        reduce using rule 84 (@17)
    $default  reduce using rule 79 (formals)

    formal  go to state 264
    @17     go to state 189


state 227

   86 formalrest: ID . formaltail

    ':'  shift, and go to state 265
    ','  shift, and go to state 266

    formaltail  go to state 267


state 228

   85 formal: @17 formalrest .

    $default  reduce using rule 85 (formal)


state 229

   73 funcDecl: FUNCTION ID @12 '(' optformals ')' . @13 ':' typeExpr semi @14 optdecls @15 optstmts endfunction semi

    $default  reduce using rule 70 (@13)

    @13  go to state 268


state 230

   94 expr: expr . '?' expr ':' expr
   95     | expr . IMPLIES expr
   96     | expr . '|' expr
   97     | expr . '&' expr
   99     | expr . '<' expr
  100     | expr . LEQ expr
  101     | expr . '>' expr
  102     | expr . GEQ expr
  103     | expr . '=' expr
  104     | expr . NEQ expr
  105     | expr . '+' expr
  106     | expr . '-' expr
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . '%' expr
  230 optCondition: expr . LONGARROW

    LONGARROW  shift, and go to state 269
    '?'        shift, and go to state 107
    IMPLIES    shift, and go to state 108
    '|'        shift, and go to state 109
    '&'        shift, and go to state 110
    '<'        shift, and go to state 111
    '='        shift, and go to state 112
    '>'        shift, and go to state 113
    GEQ        shift, and go to state 114
    NEQ        shift, and go to state 115
    LEQ        shift, and go to state 116
    '+'        shift, and go to state 117
    '-'        shift, and go to state 118
    '*'        shift, and go to state 119
    '/'        shift, and go to state 120
    '%'        shift, and go to state 121


state 231

  225 simplerule: RULE optFair optPriority optString optCondition . @29 optdecls optstmts endrule

    $default  reduce using rule 224 (@29)

    @29  go to state 270


state 232

   94 expr: expr . '?' expr ':' expr
   95     | expr . IMPLIES expr
   96     | expr . '|' expr
   97     | expr . '&' expr
   99     | expr . '<' expr
  100     | expr . LEQ expr
  101     | expr . '>' expr
  102     | expr . GEQ expr
  103     | expr . '=' expr
  104     | expr . NEQ expr
  105     | expr . '+' expr
  106     | expr . '-' expr
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . '%' expr
  137 quantifier: ID ASSIGN expr . TO expr optBy

    TO       shift, and go to state 271
    '?'      shift, and go to state 107
    IMPLIES  shift, and go to state 108
    '|'      shift, and go to state 109
    '&'      shift, and go to state 110
    '<'      shift, and go to state 111
    '='      shift, and go to state 112
    '>'      shift, and go to state 113
    GEQ      shift, and go to state 114
    NEQ      shift, and go to state 115
    LEQ      shift, and go to state 116
    '+'      shift, and go to state 117
    '-'      shift, and go to state 118
    '*'      shift, and go to state 119
    '/'      shift, and go to state 120
    '%'      shift, and go to state 121


state 233

  136 quantifier: ID ':' typeExpr .

    $default  reduce using rule 136 (quantifier)


state 234

  138 quantifiers: quantifier ';' quantifiers .

    $default  reduce using rule 138 (quantifiers)


state 235

  239 ruleset: RULESET @31 quantifiers do rules . endruleset

    END         shift, and go to state 272
    ENDRULESET  shift, and go to state 273

    endruleset  go to state 274


state 236

   94 expr: expr . '?' expr ':' expr
   95     | expr . IMPLIES expr
   96     | expr . '|' expr
   97     | expr . '&' expr
   99     | expr . '<' expr
  100     | expr . LEQ expr
  101     | expr . '>' expr
  102     | expr . GEQ expr
  103     | expr . '=' expr
  104     | expr . NEQ expr
  105     | expr . '+' expr
  106     | expr . '-' expr
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . '%' expr
  210 alias: ID ':' expr .

    '?'      shift, and go to state 107
    IMPLIES  shift, and go to state 108
    '|'      shift, and go to state 109
    '&'      shift, and go to state 110
    '<'      shift, and go to state 111
    '='      shift, and go to state 112
    '>'      shift, and go to state 113
    GEQ      shift, and go to state 114
    NEQ      shift, and go to state 115
    LEQ      shift, and go to state 116
    '+'      shift, and go to state 117
    '-'      shift, and go to state 118
    '*'      shift, and go to state 119
    '/'      shift, and go to state 120
    '%'      shift, and go to state 121

    $default  reduce using rule 210 (alias)


state 237

  208 aliases: aliases ',' alias .

    $default  reduce using rule 208 (aliases)


state 238

  206 aliases: aliases semi alias .

    $default  reduce using rule 206 (aliases)


state 239

  237 aliasrule: ALIAS @30 aliases do rules . endalias

    END       shift, and go to state 275
    ENDALIAS  shift, and go to state 276

    endalias  go to state 277


state 240

   89 optdecls: decls bEGIN .

    $default  reduce using rule 89 (optdecls)


state 241

  248 startstate: STARTSTATE @34 optString optdecls optstmts . endstartstate

    END            shift, and go to state 278
    ENDSTARTSTATE  shift, and go to state 279

    endstartstate  go to state 280


state 242

  145 optstmts: @22 . stmts

    ALIAS               shift, and go to state 281
    IF                  shift, and go to state 282
    SWITCH              shift, and go to state 283
    FOR                 shift, and go to state 284
    WHILE               shift, and go to state 285
    RETURN              shift, and go to state 286
    CLEAR               shift, and go to state 287
    ERROR               shift, and go to state 288
    ASSERT              shift, and go to state 289
    PUT                 shift, and go to state 290
    ID                  shift, and go to state 291
    UNDEFINE            shift, and go to state 292
    MULTISETREMOVE      shift, and go to state 293
    MULTISETREMOVEPRED  shift, and go to state 294
    MULTISETADD         shift, and go to state 295

    designator          go to state 296
    stmts               go to state 297
    stmt                go to state 298
    assignment          go to state 299
    ifstmt              go to state 300
    whilestmt           go to state 301
    switchstmt          go to state 302
    forstmt             go to state 303
    proccall            go to state 304
    clearstmt           go to state 305
    undefinestmt        go to state 306
    multisetaddstmt     go to state 307
    multisetremovestmt  go to state 308
    errorstmt           go to state 309
    assertstmt          go to state 310
    putstmt             go to state 311
    aliasstmt           go to state 312
    returnstmt          go to state 313


state 243

   92 designator: designator . '[' expr ']'
   93           | designator . '.' ID
  244 choose: CHOOSE @32 ID ':' designator . @33 do rules endchoose

    '['  shift, and go to state 105
    '.'  shift, and go to state 106

    $default  reduce using rule 243 (@33)

    @33  go to state 314


state 244

   94 expr: expr . '?' expr ':' expr
   95     | expr . IMPLIES expr
   96     | expr . '|' expr
   97     | expr . '&' expr
   99     | expr . '<' expr
  100     | expr . LEQ expr
  101     | expr . '>' expr
  102     | expr . GEQ expr
  103     | expr . '=' expr
  104     | expr . NEQ expr
  105     | expr . '+' expr
  106     | expr . '-' expr
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . '%' expr
  119     | FORALL @18 quantifiers do expr . endforall

    END        shift, and go to state 315
    ENDFORALL  shift, and go to state 316
    '?'        shift, and go to state 107
    IMPLIES    shift, and go to state 108
    '|'        shift, and go to state 109
    '&'        shift, and go to state 110
    '<'        shift, and go to state 111
    '='        shift, and go to state 112
    '>'        shift, and go to state 113
    GEQ        shift, and go to state 114
    NEQ        shift, and go to state 115
    LEQ        shift, and go to state 116
    '+'        shift, and go to state 117
    '-'        shift, and go to state 118
    '*'        shift, and go to state 119
    '/'        shift, and go to state 120
    '%'        shift, and go to state 121

    endforall  go to state 317


state 245

   94 expr: expr . '?' expr ':' expr
   95     | expr . IMPLIES expr
   96     | expr . '|' expr
   97     | expr . '&' expr
   99     | expr . '<' expr
  100     | expr . LEQ expr
  101     | expr . '>' expr
  102     | expr . GEQ expr
  103     | expr . '=' expr
  104     | expr . NEQ expr
  105     | expr . '+' expr
  106     | expr . '-' expr
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . '%' expr
  121     | EXISTS @19 quantifiers do expr . endexists

    END        shift, and go to state 318
    ENDEXISTS  shift, and go to state 319
    '?'        shift, and go to state 107
    IMPLIES    shift, and go to state 108
    '|'        shift, and go to state 109
    '&'        shift, and go to state 110
    '<'        shift, and go to state 111
    '='        shift, and go to state 112
    '>'        shift, and go to state 113
    GEQ        shift, and go to state 114
    NEQ        shift, and go to state 115
    LEQ        shift, and go to state 116
    '+'        shift, and go to state 117
    '-'        shift, and go to state 118
    '*'        shift, and go to state 119
    '/'        shift, and go to state 120
    '%'        shift, and go to state 121

    endexists  go to state 320


state 246

  134 exprlist: exprlist ',' UNDEFINED .

    $default  reduce using rule 134 (exprlist)


state 247

   94 expr: expr . '?' expr ':' expr
   95     | expr . IMPLIES expr
   96     | expr . '|' expr
   97     | expr . '&' expr
   99     | expr . '<' expr
  100     | expr . LEQ expr
  101     | expr . '>' expr
  102     | expr . GEQ expr
  103     | expr . '=' expr
  104     | expr . NEQ expr
  105     | expr . '+' expr
  106     | expr . '-' expr
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . '%' expr
  132 exprlist: exprlist ',' expr .

    '?'      shift, and go to state 107
    IMPLIES  shift, and go to state 108
    '|'      shift, and go to state 109
    '&'      shift, and go to state 110
    '<'      shift, and go to state 111
    '='      shift, and go to state 112
    '>'      shift, and go to state 113
    GEQ      shift, and go to state 114
    NEQ      shift, and go to state 115
    LEQ      shift, and go to state 116
    '+'      shift, and go to state 117
    '-'      shift, and go to state 118
    '*'      shift, and go to state 119
    '/'      shift, and go to state 120
    '%'      shift, and go to state 121

    $default  reduce using rule 132 (exprlist)


state 248

  116 expr: ISMEMBER '(' designator ',' typeExpr . ')'

    ')'  shift, and go to state 321


state 249

  125 expr: MULTISETCOUNT '(' @20 ID ':' . designator ',' @21 expr ')'

    ID  shift, and go to state 151

    designator  go to state 322


state 250

   94 expr: expr . '?' expr ':' expr
   94     | expr '?' expr ':' expr .
   95     | expr . IMPLIES expr
   96     | expr . '|' expr
   97     | expr . '&' expr
   99     | expr . '<' expr
  100     | expr . LEQ expr
  101     | expr . '>' expr
  102     | expr . GEQ expr
  103     | expr . '=' expr
  104     | expr . NEQ expr
  105     | expr . '+' expr
  106     | expr . '-' expr
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . '%' expr

    IMPLIES  shift, and go to state 108
    '|'      shift, and go to state 109
    '&'      shift, and go to state 110
    '<'      shift, and go to state 111
    '='      shift, and go to state 112
    '>'      shift, and go to state 113
    GEQ      shift, and go to state 114
    NEQ      shift, and go to state 115
    LEQ      shift, and go to state 116
    '+'      shift, and go to state 117
    '-'      shift, and go to state 118
    '*'      shift, and go to state 119
    '/'      shift, and go to state 120
    '%'      shift, and go to state 121

    '?'  error (nonassociative)

    $default  reduce using rule 94 (expr)


state 251

   29 enums: enums ID .

    $default  reduce using rule 29 (enums)


state 252

   27 enumtype: ENUM @4 '{' enums '}' .

    $default  reduce using rule 27 (enumtype)


state 253

   28 enums: enums ',' . ID

    ID  shift, and go to state 323


state 254

   34 recordtype: RECORD optInterleaved @5 @6 fields . endrecord
   38 fields: fields . semi field
   39       | fields . semi

    END        shift, and go to state 324
    ENDRECORD  shift, and go to state 325
    ';'        shift, and go to state 26

    semi       go to state 326
    endrecord  go to state 327


state 255

   40 fields: field .

    $default  reduce using rule 40 (fields)


state 256

   42 field: @7 . ID fieldtail

    ID  shift, and go to state 328


state 257

   45 arraytype: ARRAY optInterleaved '[' typeExpr ']' . OF typeExpr

    OF  shift, and go to state 329


state 258

   49 unionlist: unionlist ',' unionlistelt .

    $default  reduce using rule 49 (unionlist)


state 259

   50 unionlist: unionlistelt ',' unionlistelt .

    $default  reduce using rule 50 (unionlist)


state 260

   46 multisettype: MULTISET optInterleaved '[' expr ']' . OF typeExpr

    OF  shift, and go to state 330


state 261

   83 formal: VAR @16 formalrest .

    $default  reduce using rule 83 (formal)


state 262

   66 procDecl: PROCEDURE ID @9 '(' optformals ')' semi . @10 optdecls @11 optstmts endprocedure semi

    $default  reduce using rule 64 (@10)

    @10  go to state 331


state 263

   81 formals: formals ',' formal .

    $default  reduce using rule 81 (formals)


state 264

   78 formals: formals semi formal .

    $default  reduce using rule 78 (formals)


state 265

   88 formaltail: ':' . typeExpr

    error          shift, and go to state 49
    FORALL         shift, and go to state 50
    EXISTS         shift, and go to state 51
    ENUM           shift, and go to state 63
    RECORD         shift, and go to state 64
    ARRAY          shift, and go to state 65
    ID             shift, and go to state 66
    INTCONST       shift, and go to state 53
    SCALARSET      shift, and go to state 67
    ISMEMBER       shift, and go to state 54
    ISUNDEFINED    shift, and go to state 55
    UNION          shift, and go to state 68
    MULTISET       shift, and go to state 69
    MULTISETCOUNT  shift, and go to state 56
    NOT            shift, and go to state 57
    '+'            shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60

    typeExpr       go to state 332
    typeid         go to state 71
    enumtype       go to state 72
    subrangetype   go to state 73
    recordtype     go to state 74
    arraytype      go to state 75
    multisettype   go to state 76
    scalarsettype  go to state 77
    uniontype      go to state 78
    designator     go to state 61
    expr           go to state 79


state 266

   87 formaltail: ',' . ID formaltail

    ID  shift, and go to state 333


state 267

   86 formalrest: ID formaltail .

    $default  reduce using rule 86 (formalrest)


state 268

   73 funcDecl: FUNCTION ID @12 '(' optformals ')' @13 . ':' typeExpr semi @14 optdecls @15 optstmts endfunction semi

    ':'  shift, and go to state 334


state 269

  230 optCondition: expr LONGARROW .

    $default  reduce using rule 230 (optCondition)


state 270

  225 simplerule: RULE optFair optPriority optString optCondition @29 . optdecls optstmts endrule

    bEGIN     reduce using rule 6 (decls)
    CONST     reduce using rule 6 (decls)
    TYPE      reduce using rule 6 (decls)
    VAR       reduce using rule 6 (decls)
    $default  reduce using rule 90 (optdecls)

    decls     go to state 202
    optdecls  go to state 335


state 271

  137 quantifier: ID ASSIGN expr TO . expr optBy

    error          shift, and go to state 49
    FORALL         shift, and go to state 50
    EXISTS         shift, and go to state 51
    ID             shift, and go to state 52
    INTCONST       shift, and go to state 53
    ISMEMBER       shift, and go to state 54
    ISUNDEFINED    shift, and go to state 55
    MULTISETCOUNT  shift, and go to state 56
    NOT            shift, and go to state 57
    '+'            shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60

    designator  go to state 61
    expr        go to state 336


state 272

  241 endruleset: END .

    $default  reduce using rule 241 (endruleset)


state 273

  240 endruleset: ENDRULESET .

    $default  reduce using rule 240 (endruleset)


state 274

  239 ruleset: RULESET @31 quantifiers do rules endruleset .

    $default  reduce using rule 239 (ruleset)


state 275

  205 endalias: END .

    $default  reduce using rule 205 (endalias)


state 276

  204 endalias: ENDALIAS .

    $default  reduce using rule 204 (endalias)


state 277

  237 aliasrule: ALIAS @30 aliases do rules endalias .

    $default  reduce using rule 237 (aliasrule)


state 278

  250 endstartstate: END .

    $default  reduce using rule 250 (endstartstate)


state 279

  249 endstartstate: ENDSTARTSTATE .

    $default  reduce using rule 249 (endstartstate)


state 280

  248 startstate: STARTSTATE @34 optString optdecls optstmts endstartstate .

    $default  reduce using rule 248 (startstate)


state 281

  203 aliasstmt: ALIAS . @28 aliases do optstmts endalias

    $default  reduce using rule 202 (@28)

    @28  go to state 337


state 282

  167 ifstmt: IF . expr THEN optstmts optElses endif

    error          shift, and go to state 49
    FORALL         shift, and go to state 50
    EXISTS         shift, and go to state 51
    ID             shift, and go to state 52
    INTCONST       shift, and go to state 53
    ISMEMBER       shift, and go to state 54
    ISUNDEFINED    shift, and go to state 55
    MULTISETCOUNT  shift, and go to state 56
    NOT            shift, and go to state 57
    '+'            shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60

    designator  go to state 61
    expr        go to state 338


state 283

  180 switchstmt: SWITCH . expr @23 @24 optCases optElse endswitch

    error          shift, and go to state 49
    FORALL         shift, and go to state 50
    EXISTS         shift, and go to state 51
    ID             shift, and go to state 52
    INTCONST       shift, and go to state 53
    ISMEMBER       shift, and go to state 54
    ISUNDEFINED    shift, and go to state 55
    MULTISETCOUNT  shift, and go to state 56
    NOT            shift, and go to state 57
    '+'            shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60

    designator  go to state 61
    expr        go to state 339


state 284

  187 forstmt: FOR . @25 quantifiers do optstmts endfor

    $default  reduce using rule 186 (@25)

    @25  go to state 340


state 285

  175 whilestmt: WHILE . expr do optstmts endwhile

    error          shift, and go to state 49
    FORALL         shift, and go to state 50
    EXISTS         shift, and go to state 51
    ID             shift, and go to state 52
    INTCONST       shift, and go to state 53
    ISMEMBER       shift, and go to state 54
    ISUNDEFINED    shift, and go to state 55
    MULTISETCOUNT  shift, and go to state 56
    NOT            shift, and go to state 57
    '+'            shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60

    designator  go to state 61
    expr        go to state 341


state 286

  211 returnstmt: RETURN . optretexpr

    error          shift, and go to state 49
    FORALL         shift, and go to state 50
    EXISTS         shift, and go to state 51
    ID             shift, and go to state 52
    INTCONST       shift, and go to state 53
    ISMEMBER       shift, and go to state 54
    ISUNDEFINED    shift, and go to state 55
    MULTISETCOUNT  shift, and go to state 56
    NOT            shift, and go to state 57
    '+'            shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60

    END            reduce using rule 213 (optretexpr)
    ENDPROCEDURE   reduce using rule 213 (optretexpr)
    ENDFUNCTION    reduce using rule 213 (optretexpr)
    ENDRULE        reduce using rule 213 (optretexpr)
    ENDALIAS       reduce using rule 213 (optretexpr)
    ELSIF          reduce using rule 213 (optretexpr)
    ELSE           reduce using rule 213 (optretexpr)
    ENDIF          reduce using rule 213 (optretexpr)
    CASE           reduce using rule 213 (optretexpr)
    ENDSWITCH      reduce using rule 213 (optretexpr)
    ENDFOR         reduce using rule 213 (optretexpr)
    ENDWHILE       reduce using rule 213 (optretexpr)
    ENDSTARTSTATE  reduce using rule 213 (optretexpr)
    ';'            reduce using rule 213 (optretexpr)

    designator  go to state 61
    expr        go to state 342
    optretexpr  go to state 343


state 287

  191 clearstmt: CLEAR . designator

    ID  shift, and go to state 151

    designator  go to state 344


state 288

  198 errorstmt: ERROR . STRING

    STRING  shift, and go to state 345


state 289

  199 assertstmt: ASSERT . expr optString

    error          shift, and go to state 49
    FORALL         shift, and go to state 50
    EXISTS         shift, and go to state 51
    ID             shift, and go to state 52
    INTCONST       shift, and go to state 53
    ISMEMBER       shift, and go to state 54
    ISUNDEFINED    shift, and go to state 55
    MULTISETCOUNT  shift, and go to state 56
    NOT            shift, and go to state 57
    '+'            shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60

    designator  go to state 61
    expr        go to state 346


state 290

  200 putstmt: PUT . expr
  201        | PUT . STRING

    error          shift, and go to state 49
    FORALL         shift, and go to state 50
    EXISTS         shift, and go to state 51
    STRING         shift, and go to state 347
    ID             shift, and go to state 52
    INTCONST       shift, and go to state 53
    ISMEMBER       shift, and go to state 54
    ISUNDEFINED    shift, and go to state 55
    MULTISETCOUNT  shift, and go to state 56
    NOT            shift, and go to state 57
    '+'            shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60

    designator  go to state 61
    expr        go to state 348


state 291

   91 designator: ID .
  190 proccall: ID . actuals

    '('  shift, and go to state 96

    $default  reduce using rule 91 (designator)

    actuals  go to state 349


state 292

  192 undefinestmt: UNDEFINE . designator

    ID  shift, and go to state 151

    designator  go to state 350


state 293

  197 multisetremovestmt: MULTISETREMOVE . '(' expr ',' designator ')'

    '('  shift, and go to state 351


state 294

  196 multisetremovestmt: MULTISETREMOVEPRED . '(' @26 ID ':' designator @27 ',' expr ')'

    '('  shift, and go to state 352


state 295

  193 multisetaddstmt: MULTISETADD . '(' designator ',' designator ')'

    '('  shift, and go to state 353


state 296

   92 designator: designator . '[' expr ']'
   93           | designator . '.' ID
  165 assignment: designator . ASSIGN expr
  166           | designator . ASSIGN UNDEFINED

    ASSIGN  shift, and go to state 354
    '['     shift, and go to state 105
    '.'     shift, and go to state 106


state 297

  145 optstmts: @22 stmts .
  147 stmts: stmts . semi stmt
  148      | stmts . semi

    ';'  shift, and go to state 26

    $default  reduce using rule 145 (optstmts)

    semi  go to state 355


state 298

  149 stmts: stmt .

    $default  reduce using rule 149 (stmts)


state 299

  150 stmt: assignment .

    $default  reduce using rule 150 (stmt)


state 300

  151 stmt: ifstmt .

    $default  reduce using rule 151 (stmt)


state 301

  152 stmt: whilestmt .

    $default  reduce using rule 152 (stmt)


state 302

  153 stmt: switchstmt .

    $default  reduce using rule 153 (stmt)


state 303

  154 stmt: forstmt .

    $default  reduce using rule 154 (stmt)


state 304

  155 stmt: proccall .

    $default  reduce using rule 155 (stmt)


state 305

  156 stmt: clearstmt .

    $default  reduce using rule 156 (stmt)


state 306

  162 stmt: undefinestmt .

    $default  reduce using rule 162 (stmt)


state 307

  163 stmt: multisetaddstmt .

    $default  reduce using rule 163 (stmt)


state 308

  164 stmt: multisetremovestmt .

    $default  reduce using rule 164 (stmt)


state 309

  157 stmt: errorstmt .

    $default  reduce using rule 157 (stmt)


state 310

  158 stmt: assertstmt .

    $default  reduce using rule 158 (stmt)


state 311

  159 stmt: putstmt .

    $default  reduce using rule 159 (stmt)


state 312

  160 stmt: aliasstmt .

    $default  reduce using rule 160 (stmt)


state 313

  161 stmt: returnstmt .

    $default  reduce using rule 161 (stmt)


state 314

  244 choose: CHOOSE @32 ID ':' designator @33 . do rules endchoose

    DO   shift, and go to state 195
    ':'  shift, and go to state 196

    do  go to state 356


state 315

  127 endforall: END .

    $default  reduce using rule 127 (endforall)


state 316

  126 endforall: ENDFORALL .

    $default  reduce using rule 126 (endforall)


state 317

  119 expr: FORALL @18 quantifiers do expr endforall .

    $default  reduce using rule 119 (expr)


state 318

  129 endexists: END .

    $default  reduce using rule 129 (endexists)


state 319

  128 endexists: ENDEXISTS .

    $default  reduce using rule 128 (endexists)


state 320

  121 expr: EXISTS @19 quantifiers do expr endexists .

    $default  reduce using rule 121 (expr)


state 321

  116 expr: ISMEMBER '(' designator ',' typeExpr ')' .

    $default  reduce using rule 116 (expr)


state 322

   92 designator: designator . '[' expr ']'
   93           | designator . '.' ID
  125 expr: MULTISETCOUNT '(' @20 ID ':' designator . ',' @21 expr ')'

    ','  shift, and go to state 357
    '['  shift, and go to state 105
    '.'  shift, and go to state 106


state 323

   28 enums: enums ',' ID .

    $default  reduce using rule 28 (enums)


state 324

   36 endrecord: END .

    $default  reduce using rule 36 (endrecord)


state 325

   35 endrecord: ENDRECORD .

    $default  reduce using rule 35 (endrecord)


state 326

   38 fields: fields semi . field
   39       | fields semi .

    ID        reduce using rule 41 (@7)
    $default  reduce using rule 39 (fields)

    field  go to state 358
    @7     go to state 256


state 327

   34 recordtype: RECORD optInterleaved @5 @6 fields endrecord .

    $default  reduce using rule 34 (recordtype)


state 328

   42 field: @7 ID . fieldtail

    ':'  shift, and go to state 359
    ','  shift, and go to state 360

    fieldtail  go to state 361


state 329

   45 arraytype: ARRAY optInterleaved '[' typeExpr ']' OF . typeExpr

    error          shift, and go to state 49
    FORALL         shift, and go to state 50
    EXISTS         shift, and go to state 51
    ENUM           shift, and go to state 63
    RECORD         shift, and go to state 64
    ARRAY          shift, and go to state 65
    ID             shift, and go to state 66
    INTCONST       shift, and go to state 53
    SCALARSET      shift, and go to state 67
    ISMEMBER       shift, and go to state 54
    ISUNDEFINED    shift, and go to state 55
    UNION          shift, and go to state 68
    MULTISET       shift, and go to state 69
    MULTISETCOUNT  shift, and go to state 56
    NOT            shift, and go to state 57
    '+'            shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60

    typeExpr       go to state 362
    typeid         go to state 71
    enumtype       go to state 72
    subrangetype   go to state 73
    recordtype     go to state 74
    arraytype      go to state 75
    multisettype   go to state 76
    scalarsettype  go to state 77
    uniontype      go to state 78
    designator     go to state 61
    expr           go to state 79


state 330

   46 multisettype: MULTISET optInterleaved '[' expr ']' OF . typeExpr

    error          shift, and go to state 49
    FORALL         shift, and go to state 50
    EXISTS         shift, and go to state 51
    ENUM           shift, and go to state 63
    RECORD         shift, and go to state 64
    ARRAY          shift, and go to state 65
    ID             shift, and go to state 66
    INTCONST       shift, and go to state 53
    SCALARSET      shift, and go to state 67
    ISMEMBER       shift, and go to state 54
    ISUNDEFINED    shift, and go to state 55
    UNION          shift, and go to state 68
    MULTISET       shift, and go to state 69
    MULTISETCOUNT  shift, and go to state 56
    NOT            shift, and go to state 57
    '+'            shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60

    typeExpr       go to state 363
    typeid         go to state 71
    enumtype       go to state 72
    subrangetype   go to state 73
    recordtype     go to state 74
    arraytype      go to state 75
    multisettype   go to state 76
    scalarsettype  go to state 77
    uniontype      go to state 78
    designator     go to state 61
    expr           go to state 79


state 331

   66 procDecl: PROCEDURE ID @9 '(' optformals ')' semi @10 . optdecls @11 optstmts endprocedure semi

    bEGIN     reduce using rule 6 (decls)
    CONST     reduce using rule 6 (decls)
    TYPE      reduce using rule 6 (decls)
    VAR       reduce using rule 6 (decls)
    $default  reduce using rule 90 (optdecls)

    decls     go to state 202
    optdecls  go to state 364


state 332

   88 formaltail: ':' typeExpr .

    $default  reduce using rule 88 (formaltail)


state 333

   87 formaltail: ',' ID . formaltail

    ':'  shift, and go to state 265
    ','  shift, and go to state 266

    formaltail  go to state 365


state 334

   73 funcDecl: FUNCTION ID @12 '(' optformals ')' @13 ':' . typeExpr semi @14 optdecls @15 optstmts endfunction semi

    error          shift, and go to state 49
    FORALL         shift, and go to state 50
    EXISTS         shift, and go to state 51
    ENUM           shift, and go to state 63
    RECORD         shift, and go to state 64
    ARRAY          shift, and go to state 65
    ID             shift, and go to state 66
    INTCONST       shift, and go to state 53
    SCALARSET      shift, and go to state 67
    ISMEMBER       shift, and go to state 54
    ISUNDEFINED    shift, and go to state 55
    UNION          shift, and go to state 68
    MULTISET       shift, and go to state 69
    MULTISETCOUNT  shift, and go to state 56
    NOT            shift, and go to state 57
    '+'            shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60

    typeExpr       go to state 366
    typeid         go to state 71
    enumtype       go to state 72
    subrangetype   go to state 73
    recordtype     go to state 74
    arraytype      go to state 75
    multisettype   go to state 76
    scalarsettype  go to state 77
    uniontype      go to state 78
    designator     go to state 61
    expr           go to state 79


state 335

  225 simplerule: RULE optFair optPriority optString optCondition @29 optdecls . optstmts endrule

    END       reduce using rule 146 (optstmts)
    ENDRULE   reduce using rule 146 (optstmts)
    $default  reduce using rule 144 (@22)

    optstmts  go to state 367
    @22       go to state 242


state 336

   94 expr: expr . '?' expr ':' expr
   95     | expr . IMPLIES expr
   96     | expr . '|' expr
   97     | expr . '&' expr
   99     | expr . '<' expr
  100     | expr . LEQ expr
  101     | expr . '>' expr
  102     | expr . GEQ expr
  103     | expr . '=' expr
  104     | expr . NEQ expr
  105     | expr . '+' expr
  106     | expr . '-' expr
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . '%' expr
  137 quantifier: ID ASSIGN expr TO expr . optBy

    BY       shift, and go to state 368
    '?'      shift, and go to state 107
    IMPLIES  shift, and go to state 108
    '|'      shift, and go to state 109
    '&'      shift, and go to state 110
    '<'      shift, and go to state 111
    '='      shift, and go to state 112
    '>'      shift, and go to state 113
    GEQ      shift, and go to state 114
    NEQ      shift, and go to state 115
    LEQ      shift, and go to state 116
    '+'      shift, and go to state 117
    '-'      shift, and go to state 118
    '*'      shift, and go to state 119
    '/'      shift, and go to state 120
    '%'      shift, and go to state 121

    $default  reduce using rule 143 (optBy)

    optBy  go to state 369


state 337

  203 aliasstmt: ALIAS @28 . aliases do optstmts endalias

    ID  shift, and go to state 138

    aliases  go to state 370
    alias    go to state 140


state 338

   94 expr: expr . '?' expr ':' expr
   95     | expr . IMPLIES expr
   96     | expr . '|' expr
   97     | expr . '&' expr
   99     | expr . '<' expr
  100     | expr . LEQ expr
  101     | expr . '>' expr
  102     | expr . GEQ expr
  103     | expr . '=' expr
  104     | expr . NEQ expr
  105     | expr . '+' expr
  106     | expr . '-' expr
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . '%' expr
  167 ifstmt: IF expr . THEN optstmts optElses endif

    THEN     shift, and go to state 371
    '?'      shift, and go to state 107
    IMPLIES  shift, and go to state 108
    '|'      shift, and go to state 109
    '&'      shift, and go to state 110
    '<'      shift, and go to state 111
    '='      shift, and go to state 112
    '>'      shift, and go to state 113
    GEQ      shift, and go to state 114
    NEQ      shift, and go to state 115
    LEQ      shift, and go to state 116
    '+'      shift, and go to state 117
    '-'      shift, and go to state 118
    '*'      shift, and go to state 119
    '/'      shift, and go to state 120
    '%'      shift, and go to state 121


state 339

   94 expr: expr . '?' expr ':' expr
   95     | expr . IMPLIES expr
   96     | expr . '|' expr
   97     | expr . '&' expr
   99     | expr . '<' expr
  100     | expr . LEQ expr
  101     | expr . '>' expr
  102     | expr . GEQ expr
  103     | expr . '=' expr
  104     | expr . NEQ expr
  105     | expr . '+' expr
  106     | expr . '-' expr
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . '%' expr
  180 switchstmt: SWITCH expr . @23 @24 optCases optElse endswitch

    '?'      shift, and go to state 107
    IMPLIES  shift, and go to state 108
    '|'      shift, and go to state 109
    '&'      shift, and go to state 110
    '<'      shift, and go to state 111
    '='      shift, and go to state 112
    '>'      shift, and go to state 113
    GEQ      shift, and go to state 114
    NEQ      shift, and go to state 115
    LEQ      shift, and go to state 116
    '+'      shift, and go to state 117
    '-'      shift, and go to state 118
    '*'      shift, and go to state 119
    '/'      shift, and go to state 120
    '%'      shift, and go to state 121

    $default  reduce using rule 178 (@23)

    @23  go to state 372


state 340

  187 forstmt: FOR @25 . quantifiers do optstmts endfor

    ID  shift, and go to state 135

    quantifier   go to state 136
    quantifiers  go to state 373


state 341

   94 expr: expr . '?' expr ':' expr
   95     | expr . IMPLIES expr
   96     | expr . '|' expr
   97     | expr . '&' expr
   99     | expr . '<' expr
  100     | expr . LEQ expr
  101     | expr . '>' expr
  102     | expr . GEQ expr
  103     | expr . '=' expr
  104     | expr . NEQ expr
  105     | expr . '+' expr
  106     | expr . '-' expr
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . '%' expr
  175 whilestmt: WHILE expr . do optstmts endwhile

    DO       shift, and go to state 195
    '?'      shift, and go to state 107
    ':'      shift, and go to state 196
    IMPLIES  shift, and go to state 108
    '|'      shift, and go to state 109
    '&'      shift, and go to state 110
    '<'      shift, and go to state 111
    '='      shift, and go to state 112
    '>'      shift, and go to state 113
    GEQ      shift, and go to state 114
    NEQ      shift, and go to state 115
    LEQ      shift, and go to state 116
    '+'      shift, and go to state 117
    '-'      shift, and go to state 118
    '*'      shift, and go to state 119
    '/'      shift, and go to state 120
    '%'      shift, and go to state 121

    do  go to state 374


state 342

   94 expr: expr . '?' expr ':' expr
   95     | expr . IMPLIES expr
   96     | expr . '|' expr
   97     | expr . '&' expr
   99     | expr . '<' expr
  100     | expr . LEQ expr
  101     | expr . '>' expr
  102     | expr . GEQ expr
  103     | expr . '=' expr
  104     | expr . NEQ expr
  105     | expr . '+' expr
  106     | expr . '-' expr
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . '%' expr
  212 optretexpr: expr .

    '?'      shift, and go to state 107
    IMPLIES  shift, and go to state 108
    '|'      shift, and go to state 109
    '&'      shift, and go to state 110
    '<'      shift, and go to state 111
    '='      shift, and go to state 112
    '>'      shift, and go to state 113
    GEQ      shift, and go to state 114
    NEQ      shift, and go to state 115
    LEQ      shift, and go to state 116
    '+'      shift, and go to state 117
    '-'      shift, and go to state 118
    '*'      shift, and go to state 119
    '/'      shift, and go to state 120
    '%'      shift, and go to state 121

    $default  reduce using rule 212 (optretexpr)


state 343

  211 returnstmt: RETURN optretexpr .

    $default  reduce using rule 211 (returnstmt)


state 344

   92 designator: designator . '[' expr ']'
   93           | designator . '.' ID
  191 clearstmt: CLEAR designator .

    '['  shift, and go to state 105
    '.'  shift, and go to state 106

    $default  reduce using rule 191 (clearstmt)


state 345

  198 errorstmt: ERROR STRING .

    $default  reduce using rule 198 (errorstmt)


state 346

   94 expr: expr . '?' expr ':' expr
   95     | expr . IMPLIES expr
   96     | expr . '|' expr
   97     | expr . '&' expr
   99     | expr . '<' expr
  100     | expr . LEQ expr
  101     | expr . '>' expr
  102     | expr . GEQ expr
  103     | expr . '=' expr
  104     | expr . NEQ expr
  105     | expr . '+' expr
  106     | expr . '-' expr
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . '%' expr
  199 assertstmt: ASSERT expr . optString

    STRING   shift, and go to state 90
    '?'      shift, and go to state 107
    IMPLIES  shift, and go to state 108
    '|'      shift, and go to state 109
    '&'      shift, and go to state 110
    '<'      shift, and go to state 111
    '='      shift, and go to state 112
    '>'      shift, and go to state 113
    GEQ      shift, and go to state 114
    NEQ      shift, and go to state 115
    LEQ      shift, and go to state 116
    '+'      shift, and go to state 117
    '-'      shift, and go to state 118
    '*'      shift, and go to state 119
    '/'      shift, and go to state 120
    '%'      shift, and go to state 121

    $default  reduce using rule 233 (optString)

    optString  go to state 375


state 347

  201 putstmt: PUT STRING .

    $default  reduce using rule 201 (putstmt)


state 348

   94 expr: expr . '?' expr ':' expr
   95     | expr . IMPLIES expr
   96     | expr . '|' expr
   97     | expr . '&' expr
   99     | expr . '<' expr
  100     | expr . LEQ expr
  101     | expr . '>' expr
  102     | expr . GEQ expr
  103     | expr . '=' expr
  104     | expr . NEQ expr
  105     | expr . '+' expr
  106     | expr . '-' expr
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . '%' expr
  200 putstmt: PUT expr .

    '?'      shift, and go to state 107
    IMPLIES  shift, and go to state 108
    '|'      shift, and go to state 109
    '&'      shift, and go to state 110
    '<'      shift, and go to state 111
    '='      shift, and go to state 112
    '>'      shift, and go to state 113
    GEQ      shift, and go to state 114
    NEQ      shift, and go to state 115
    LEQ      shift, and go to state 116
    '+'      shift, and go to state 117
    '-'      shift, and go to state 118
    '*'      shift, and go to state 119
    '/'      shift, and go to state 120
    '%'      shift, and go to state 121

    $default  reduce using rule 200 (putstmt)


state 349

  190 proccall: ID actuals .

    $default  reduce using rule 190 (proccall)


state 350

   92 designator: designator . '[' expr ']'
   93           | designator . '.' ID
  192 undefinestmt: UNDEFINE designator .

    '['  shift, and go to state 105
    '.'  shift, and go to state 106

    $default  reduce using rule 192 (undefinestmt)


state 351

  197 multisetremovestmt: MULTISETREMOVE '(' . expr ',' designator ')'

    error          shift, and go to state 49
    FORALL         shift, and go to state 50
    EXISTS         shift, and go to state 51
    ID             shift, and go to state 52
    INTCONST       shift, and go to state 53
    ISMEMBER       shift, and go to state 54
    ISUNDEFINED    shift, and go to state 55
    MULTISETCOUNT  shift, and go to state 56
    NOT            shift, and go to state 57
    '+'            shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60

    designator  go to state 61
    expr        go to state 376


state 352

  196 multisetremovestmt: MULTISETREMOVEPRED '(' . @26 ID ':' designator @27 ',' expr ')'

    $default  reduce using rule 194 (@26)

    @26  go to state 377


state 353

  193 multisetaddstmt: MULTISETADD '(' . designator ',' designator ')'

    ID  shift, and go to state 151

    designator  go to state 378


state 354

  165 assignment: designator ASSIGN . expr
  166           | designator ASSIGN . UNDEFINED

    error          shift, and go to state 49
    FORALL         shift, and go to state 50
    EXISTS         shift, and go to state 51
    ID             shift, and go to state 52
    INTCONST       shift, and go to state 53
    ISMEMBER       shift, and go to state 54
    ISUNDEFINED    shift, and go to state 55
    UNDEFINED      shift, and go to state 379
    MULTISETCOUNT  shift, and go to state 56
    NOT            shift, and go to state 57
    '+'            shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60

    designator  go to state 61
    expr        go to state 380


state 355

  147 stmts: stmts semi . stmt
  148      | stmts semi .

    ALIAS               shift, and go to state 281
    IF                  shift, and go to state 282
    SWITCH              shift, and go to state 283
    FOR                 shift, and go to state 284
    WHILE               shift, and go to state 285
    RETURN              shift, and go to state 286
    CLEAR               shift, and go to state 287
    ERROR               shift, and go to state 288
    ASSERT              shift, and go to state 289
    PUT                 shift, and go to state 290
    ID                  shift, and go to state 291
    UNDEFINE            shift, and go to state 292
    MULTISETREMOVE      shift, and go to state 293
    MULTISETREMOVEPRED  shift, and go to state 294
    MULTISETADD         shift, and go to state 295

    $default  reduce using rule 148 (stmts)

    designator          go to state 296
    stmt                go to state 381
    assignment          go to state 299
    ifstmt              go to state 300
    whilestmt           go to state 301
    switchstmt          go to state 302
    forstmt             go to state 303
    proccall            go to state 304
    clearstmt           go to state 305
    undefinestmt        go to state 306
    multisetaddstmt     go to state 307
    multisetremovestmt  go to state 308
    errorstmt           go to state 309
    assertstmt          go to state 310
    putstmt             go to state 311
    aliasstmt           go to state 312
    returnstmt          go to state 313


state 356

  244 choose: CHOOSE @32 ID ':' designator @33 do . rules endchoose

    error       shift, and go to state 34
    RULE        shift, and go to state 35
    RULESET     shift, and go to state 36
    ALIAS       shift, and go to state 37
    STARTSTATE  shift, and go to state 38
    INVARIANT   shift, and go to state 39
    CHOOSE      shift, and go to state 40

    rules       go to state 382
    rule        go to state 42
    simplerule  go to state 43
    aliasrule   go to state 44
    ruleset     go to state 45
    choose      go to state 46
    startstate  go to state 47
    invariant   go to state 48


state 357

  125 expr: MULTISETCOUNT '(' @20 ID ':' designator ',' . @21 expr ')'

    $default  reduce using rule 124 (@21)

    @21  go to state 383


state 358

   38 fields: fields semi field .

    $default  reduce using rule 38 (fields)


state 359

   44 fieldtail: ':' . typeExpr

    error          shift, and go to state 49
    FORALL         shift, and go to state 50
    EXISTS         shift, and go to state 51
    ENUM           shift, and go to state 63
    RECORD         shift, and go to state 64
    ARRAY          shift, and go to state 65
    ID             shift, and go to state 66
    INTCONST       shift, and go to state 53
    SCALARSET      shift, and go to state 67
    ISMEMBER       shift, and go to state 54
    ISUNDEFINED    shift, and go to state 55
    UNION          shift, and go to state 68
    MULTISET       shift, and go to state 69
    MULTISETCOUNT  shift, and go to state 56
    NOT            shift, and go to state 57
    '+'            shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60

    typeExpr       go to state 384
    typeid         go to state 71
    enumtype       go to state 72
    subrangetype   go to state 73
    recordtype     go to state 74
    arraytype      go to state 75
    multisettype   go to state 76
    scalarsettype  go to state 77
    uniontype      go to state 78
    designator     go to state 61
    expr           go to state 79


state 360

   43 fieldtail: ',' . ID fieldtail

    ID  shift, and go to state 385


state 361

   42 field: @7 ID fieldtail .

    $default  reduce using rule 42 (field)


state 362

   45 arraytype: ARRAY optInterleaved '[' typeExpr ']' OF typeExpr .

    $default  reduce using rule 45 (arraytype)


state 363

   46 multisettype: MULTISET optInterleaved '[' expr ']' OF typeExpr .

    $default  reduce using rule 46 (multisettype)


state 364

   66 procDecl: PROCEDURE ID @9 '(' optformals ')' semi @10 optdecls . @11 optstmts endprocedure semi

    $default  reduce using rule 65 (@11)

    @11  go to state 386


state 365

   87 formaltail: ',' ID formaltail .

    $default  reduce using rule 87 (formaltail)


state 366

   73 funcDecl: FUNCTION ID @12 '(' optformals ')' @13 ':' typeExpr . semi @14 optdecls @15 optstmts endfunction semi

    ';'  shift, and go to state 26

    semi  go to state 387


state 367

  225 simplerule: RULE optFair optPriority optString optCondition @29 optdecls optstmts . endrule

    END      shift, and go to state 388
    ENDRULE  shift, and go to state 389

    endrule  go to state 390


state 368

  142 optBy: BY . expr

    error          shift, and go to state 49
    FORALL         shift, and go to state 50
    EXISTS         shift, and go to state 51
    ID             shift, and go to state 52
    INTCONST       shift, and go to state 53
    ISMEMBER       shift, and go to state 54
    ISUNDEFINED    shift, and go to state 55
    MULTISETCOUNT  shift, and go to state 56
    NOT            shift, and go to state 57
    '+'            shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60

    designator  go to state 61
    expr        go to state 391


state 369

  137 quantifier: ID ASSIGN expr TO expr optBy .

    $default  reduce using rule 137 (quantifier)


state 370

  203 aliasstmt: ALIAS @28 aliases . do optstmts endalias
  206 aliases: aliases . semi alias
  207        | aliases . semi
  208        | aliases . ',' alias

    DO   shift, and go to state 195
    ':'  shift, and go to state 196
    ';'  shift, and go to state 26
    ','  shift, and go to state 199

    semi  go to state 200
    do    go to state 392


state 371

  167 ifstmt: IF expr THEN . optstmts optElses endif

    END       reduce using rule 146 (optstmts)
    ELSIF     reduce using rule 146 (optstmts)
    ELSE      reduce using rule 146 (optstmts)
    ENDIF     reduce using rule 146 (optstmts)
    $default  reduce using rule 144 (@22)

    optstmts  go to state 393
    @22       go to state 242


state 372

  180 switchstmt: SWITCH expr @23 . @24 optCases optElse endswitch

    $default  reduce using rule 179 (@24)

    @24  go to state 394


state 373

  187 forstmt: FOR @25 quantifiers . do optstmts endfor

    DO   shift, and go to state 195
    ':'  shift, and go to state 196

    do  go to state 395


state 374

  175 whilestmt: WHILE expr do . optstmts endwhile

    END       reduce using rule 146 (optstmts)
    ENDWHILE  reduce using rule 146 (optstmts)
    $default  reduce using rule 144 (@22)

    optstmts  go to state 396
    @22       go to state 242


state 375

  199 assertstmt: ASSERT expr optString .

    $default  reduce using rule 199 (assertstmt)


state 376

   94 expr: expr . '?' expr ':' expr
   95     | expr . IMPLIES expr
   96     | expr . '|' expr
   97     | expr . '&' expr
   99     | expr . '<' expr
  100     | expr . LEQ expr
  101     | expr . '>' expr
  102     | expr . GEQ expr
  103     | expr . '=' expr
  104     | expr . NEQ expr
  105     | expr . '+' expr
  106     | expr . '-' expr
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . '%' expr
  197 multisetremovestmt: MULTISETREMOVE '(' expr . ',' designator ')'

    '?'      shift, and go to state 107
    IMPLIES  shift, and go to state 108
    '|'      shift, and go to state 109
    '&'      shift, and go to state 110
    '<'      shift, and go to state 111
    '='      shift, and go to state 112
    '>'      shift, and go to state 113
    GEQ      shift, and go to state 114
    NEQ      shift, and go to state 115
    LEQ      shift, and go to state 116
    '+'      shift, and go to state 117
    '-'      shift, and go to state 118
    '*'      shift, and go to state 119
    '/'      shift, and go to state 120
    '%'      shift, and go to state 121
    ','      shift, and go to state 397


state 377

  196 multisetremovestmt: MULTISETREMOVEPRED '(' @26 . ID ':' designator @27 ',' expr ')'

    ID  shift, and go to state 398


state 378

   92 designator: designator . '[' expr ']'
   93           | designator . '.' ID
  193 multisetaddstmt: MULTISETADD '(' designator . ',' designator ')'

    ','  shift, and go to state 399
    '['  shift, and go to state 105
    '.'  shift, and go to state 106


state 379

  166 assignment: designator ASSIGN UNDEFINED .

    $default  reduce using rule 166 (assignment)


state 380

   94 expr: expr . '?' expr ':' expr
   95     | expr . IMPLIES expr
   96     | expr . '|' expr
   97     | expr . '&' expr
   99     | expr . '<' expr
  100     | expr . LEQ expr
  101     | expr . '>' expr
  102     | expr . GEQ expr
  103     | expr . '=' expr
  104     | expr . NEQ expr
  105     | expr . '+' expr
  106     | expr . '-' expr
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . '%' expr
  165 assignment: designator ASSIGN expr .

    '?'      shift, and go to state 107
    IMPLIES  shift, and go to state 108
    '|'      shift, and go to state 109
    '&'      shift, and go to state 110
    '<'      shift, and go to state 111
    '='      shift, and go to state 112
    '>'      shift, and go to state 113
    GEQ      shift, and go to state 114
    NEQ      shift, and go to state 115
    LEQ      shift, and go to state 116
    '+'      shift, and go to state 117
    '-'      shift, and go to state 118
    '*'      shift, and go to state 119
    '/'      shift, and go to state 120
    '%'      shift, and go to state 121

    $default  reduce using rule 165 (assignment)


state 381

  147 stmts: stmts semi stmt .

    $default  reduce using rule 147 (stmts)


state 382

  244 choose: CHOOSE @32 ID ':' designator @33 do rules . endchoose

    END        shift, and go to state 400
    ENDCHOOSE  shift, and go to state 401

    endchoose  go to state 402


state 383

  125 expr: MULTISETCOUNT '(' @20 ID ':' designator ',' @21 . expr ')'

    error          shift, and go to state 49
    FORALL         shift, and go to state 50
    EXISTS         shift, and go to state 51
    ID             shift, and go to state 52
    INTCONST       shift, and go to state 53
    ISMEMBER       shift, and go to state 54
    ISUNDEFINED    shift, and go to state 55
    MULTISETCOUNT  shift, and go to state 56
    NOT            shift, and go to state 57
    '+'            shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60

    designator  go to state 61
    expr        go to state 403


state 384

   44 fieldtail: ':' typeExpr .

    $default  reduce using rule 44 (fieldtail)


state 385

   43 fieldtail: ',' ID . fieldtail

    ':'  shift, and go to state 359
    ','  shift, and go to state 360

    fieldtail  go to state 404


state 386

   66 procDecl: PROCEDURE ID @9 '(' optformals ')' semi @10 optdecls @11 . optstmts endprocedure semi

    END           reduce using rule 146 (optstmts)
    ENDPROCEDURE  reduce using rule 146 (optstmts)
    $default      reduce using rule 144 (@22)

    optstmts  go to state 405
    @22       go to state 242


state 387

   73 funcDecl: FUNCTION ID @12 '(' optformals ')' @13 ':' typeExpr semi . @14 optdecls @15 optstmts endfunction semi

    $default  reduce using rule 71 (@14)

    @14  go to state 406


state 388

  229 endrule: END .

    $default  reduce using rule 229 (endrule)


state 389

  228 endrule: ENDRULE .

    $default  reduce using rule 228 (endrule)


state 390

  225 simplerule: RULE optFair optPriority optString optCondition @29 optdecls optstmts endrule .

    $default  reduce using rule 225 (simplerule)


state 391

   94 expr: expr . '?' expr ':' expr
   95     | expr . IMPLIES expr
   96     | expr . '|' expr
   97     | expr . '&' expr
   99     | expr . '<' expr
  100     | expr . LEQ expr
  101     | expr . '>' expr
  102     | expr . GEQ expr
  103     | expr . '=' expr
  104     | expr . NEQ expr
  105     | expr . '+' expr
  106     | expr . '-' expr
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . '%' expr
  142 optBy: BY expr .

    '?'      shift, and go to state 107
    IMPLIES  shift, and go to state 108
    '|'      shift, and go to state 109
    '&'      shift, and go to state 110
    '<'      shift, and go to state 111
    '='      shift, and go to state 112
    '>'      shift, and go to state 113
    GEQ      shift, and go to state 114
    NEQ      shift, and go to state 115
    LEQ      shift, and go to state 116
    '+'      shift, and go to state 117
    '-'      shift, and go to state 118
    '*'      shift, and go to state 119
    '/'      shift, and go to state 120
    '%'      shift, and go to state 121

    $default  reduce using rule 142 (optBy)


state 392

  203 aliasstmt: ALIAS @28 aliases do . optstmts endalias

    END       reduce using rule 146 (optstmts)
    ENDALIAS  reduce using rule 146 (optstmts)
    $default  reduce using rule 144 (@22)

    optstmts  go to state 407
    @22       go to state 242


state 393

  167 ifstmt: IF expr THEN optstmts . optElses endif

    ELSIF  shift, and go to state 408
    ELSE   shift, and go to state 409

    $default  reduce using rule 174 (optElse)

    optElses  go to state 410
    elsif     go to state 411
    optElse   go to state 412


state 394

  180 switchstmt: SWITCH expr @23 @24 . optCases optElse endswitch

    $default  reduce using rule 184 (optCases)

    optCases  go to state 413


state 395

  187 forstmt: FOR @25 quantifiers do . optstmts endfor

    END       reduce using rule 146 (optstmts)
    ENDFOR    reduce using rule 146 (optstmts)
    $default  reduce using rule 144 (@22)

    optstmts  go to state 414
    @22       go to state 242


state 396

  175 whilestmt: WHILE expr do optstmts . endwhile

    END       shift, and go to state 415
    ENDWHILE  shift, and go to state 416

    endwhile  go to state 417


state 397

  197 multisetremovestmt: MULTISETREMOVE '(' expr ',' . designator ')'

    ID  shift, and go to state 151

    designator  go to state 418


state 398

  196 multisetremovestmt: MULTISETREMOVEPRED '(' @26 ID . ':' designator @27 ',' expr ')'

    ':'  shift, and go to state 419


state 399

  193 multisetaddstmt: MULTISETADD '(' designator ',' . designator ')'

    ID  shift, and go to state 151

    designator  go to state 420


state 400

  246 endchoose: END .

    $default  reduce using rule 246 (endchoose)


state 401

  245 endchoose: ENDCHOOSE .

    $default  reduce using rule 245 (endchoose)


state 402

  244 choose: CHOOSE @32 ID ':' designator @33 do rules endchoose .

    $default  reduce using rule 244 (choose)


state 403

   94 expr: expr . '?' expr ':' expr
   95     | expr . IMPLIES expr
   96     | expr . '|' expr
   97     | expr . '&' expr
   99     | expr . '<' expr
  100     | expr . LEQ expr
  101     | expr . '>' expr
  102     | expr . GEQ expr
  103     | expr . '=' expr
  104     | expr . NEQ expr
  105     | expr . '+' expr
  106     | expr . '-' expr
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . '%' expr
  125     | MULTISETCOUNT '(' @20 ID ':' designator ',' @21 expr . ')'

    '?'      shift, and go to state 107
    IMPLIES  shift, and go to state 108
    '|'      shift, and go to state 109
    '&'      shift, and go to state 110
    '<'      shift, and go to state 111
    '='      shift, and go to state 112
    '>'      shift, and go to state 113
    GEQ      shift, and go to state 114
    NEQ      shift, and go to state 115
    LEQ      shift, and go to state 116
    '+'      shift, and go to state 117
    '-'      shift, and go to state 118
    '*'      shift, and go to state 119
    '/'      shift, and go to state 120
    '%'      shift, and go to state 121
    ')'      shift, and go to state 421


state 404

   43 fieldtail: ',' ID fieldtail .

    $default  reduce using rule 43 (fieldtail)


state 405

   66 procDecl: PROCEDURE ID @9 '(' optformals ')' semi @10 optdecls @11 optstmts . endprocedure semi

    END           shift, and go to state 422
    ENDPROCEDURE  shift, and go to state 423

    endprocedure  go to state 424


state 406

   73 funcDecl: FUNCTION ID @12 '(' optformals ')' @13 ':' typeExpr semi @14 . optdecls @15 optstmts endfunction semi

    bEGIN     reduce using rule 6 (decls)
    CONST     reduce using rule 6 (decls)
    TYPE      reduce using rule 6 (decls)
    VAR       reduce using rule 6 (decls)
    $default  reduce using rule 90 (optdecls)

    decls     go to state 202
    optdecls  go to state 425


state 407

  203 aliasstmt: ALIAS @28 aliases do optstmts . endalias

    END       shift, and go to state 275
    ENDALIAS  shift, and go to state 276

    endalias  go to state 426


state 408

  172 elsif: ELSIF . expr THEN optstmts

    error          shift, and go to state 49
    FORALL         shift, and go to state 50
    EXISTS         shift, and go to state 51
    ID             shift, and go to state 52
    INTCONST       shift, and go to state 53
    ISMEMBER       shift, and go to state 54
    ISUNDEFINED    shift, and go to state 55
    MULTISETCOUNT  shift, and go to state 56
    NOT            shift, and go to state 57
    '+'            shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60

    designator  go to state 61
    expr        go to state 427


state 409

  173 optElse: ELSE . optstmts

    END        reduce using rule 146 (optstmts)
    ENDIF      reduce using rule 146 (optstmts)
    ENDSWITCH  reduce using rule 146 (optstmts)
    $default   reduce using rule 144 (@22)

    optstmts  go to state 428
    @22       go to state 242


state 410

  167 ifstmt: IF expr THEN optstmts optElses . endif

    END    shift, and go to state 429
    ENDIF  shift, and go to state 430

    endif  go to state 431


state 411

  170 optElses: elsif . optElses

    ELSIF  shift, and go to state 408
    ELSE   shift, and go to state 409

    $default  reduce using rule 174 (optElse)

    optElses  go to state 432
    elsif     go to state 411
    optElse   go to state 412


state 412

  171 optElses: optElse .

    $default  reduce using rule 171 (optElses)


state 413

  180 switchstmt: SWITCH expr @23 @24 optCases . optElse endswitch
  183 optCases: optCases . case

    ELSE  shift, and go to state 409
    CASE  shift, and go to state 433

    $default  reduce using rule 174 (optElse)

    optElse  go to state 434
    case     go to state 435


state 414

  187 forstmt: FOR @25 quantifiers do optstmts . endfor

    END     shift, and go to state 436
    ENDFOR  shift, and go to state 437

    endfor  go to state 438


state 415

  177 endwhile: END .

    $default  reduce using rule 177 (endwhile)


state 416

  176 endwhile: ENDWHILE .

    $default  reduce using rule 176 (endwhile)


state 417

  175 whilestmt: WHILE expr do optstmts endwhile .

    $default  reduce using rule 175 (whilestmt)


state 418

   92 designator: designator . '[' expr ']'
   93           | designator . '.' ID
  197 multisetremovestmt: MULTISETREMOVE '(' expr ',' designator . ')'

    '['  shift, and go to state 105
    ')'  shift, and go to state 439
    '.'  shift, and go to state 106


state 419

  196 multisetremovestmt: MULTISETREMOVEPRED '(' @26 ID ':' . designator @27 ',' expr ')'

    ID  shift, and go to state 151

    designator  go to state 440


state 420

   92 designator: designator . '[' expr ']'
   93           | designator . '.' ID
  193 multisetaddstmt: MULTISETADD '(' designator ',' designator . ')'

    '['  shift, and go to state 105
    ')'  shift, and go to state 441
    '.'  shift, and go to state 106


state 421

  125 expr: MULTISETCOUNT '(' @20 ID ':' designator ',' @21 expr ')' .

    $default  reduce using rule 125 (expr)


state 422

   68 endprocedure: END .

    $default  reduce using rule 68 (endprocedure)


state 423

   67 endprocedure: ENDPROCEDURE .

    $default  reduce using rule 67 (endprocedure)


state 424

   66 procDecl: PROCEDURE ID @9 '(' optformals ')' semi @10 optdecls @11 optstmts endprocedure . semi

    ';'  shift, and go to state 26

    semi  go to state 442


state 425

   73 funcDecl: FUNCTION ID @12 '(' optformals ')' @13 ':' typeExpr semi @14 optdecls . @15 optstmts endfunction semi

    $default  reduce using rule 72 (@15)

    @15  go to state 443


state 426

  203 aliasstmt: ALIAS @28 aliases do optstmts endalias .

    $default  reduce using rule 203 (aliasstmt)


state 427

   94 expr: expr . '?' expr ':' expr
   95     | expr . IMPLIES expr
   96     | expr . '|' expr
   97     | expr . '&' expr
   99     | expr . '<' expr
  100     | expr . LEQ expr
  101     | expr . '>' expr
  102     | expr . GEQ expr
  103     | expr . '=' expr
  104     | expr . NEQ expr
  105     | expr . '+' expr
  106     | expr . '-' expr
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . '%' expr
  172 elsif: ELSIF expr . THEN optstmts

    THEN     shift, and go to state 444
    '?'      shift, and go to state 107
    IMPLIES  shift, and go to state 108
    '|'      shift, and go to state 109
    '&'      shift, and go to state 110
    '<'      shift, and go to state 111
    '='      shift, and go to state 112
    '>'      shift, and go to state 113
    GEQ      shift, and go to state 114
    NEQ      shift, and go to state 115
    LEQ      shift, and go to state 116
    '+'      shift, and go to state 117
    '-'      shift, and go to state 118
    '*'      shift, and go to state 119
    '/'      shift, and go to state 120
    '%'      shift, and go to state 121


state 428

  173 optElse: ELSE optstmts .

    $default  reduce using rule 173 (optElse)


state 429

  169 endif: END .

    $default  reduce using rule 169 (endif)


state 430

  168 endif: ENDIF .

    $default  reduce using rule 168 (endif)


state 431

  167 ifstmt: IF expr THEN optstmts optElses endif .

    $default  reduce using rule 167 (ifstmt)


state 432

  170 optElses: elsif optElses .

    $default  reduce using rule 170 (optElses)


state 433

  185 case: CASE . exprlist ':' optstmts

    error          shift, and go to state 49
    FORALL         shift, and go to state 50
    EXISTS         shift, and go to state 51
    ID             shift, and go to state 52
    INTCONST       shift, and go to state 53
    ISMEMBER       shift, and go to state 54
    ISUNDEFINED    shift, and go to state 55
    UNDEFINED      shift, and go to state 147
    MULTISETCOUNT  shift, and go to state 56
    NOT            shift, and go to state 57
    '+'            shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60

    designator  go to state 61
    expr        go to state 149
    exprlist    go to state 445


state 434

  180 switchstmt: SWITCH expr @23 @24 optCases optElse . endswitch

    END        shift, and go to state 446
    ENDSWITCH  shift, and go to state 447

    endswitch  go to state 448


state 435

  183 optCases: optCases case .

    $default  reduce using rule 183 (optCases)


state 436

  189 endfor: END .

    $default  reduce using rule 189 (endfor)


state 437

  188 endfor: ENDFOR .

    $default  reduce using rule 188 (endfor)


state 438

  187 forstmt: FOR @25 quantifiers do optstmts endfor .

    $default  reduce using rule 187 (forstmt)


state 439

  197 multisetremovestmt: MULTISETREMOVE '(' expr ',' designator ')' .

    $default  reduce using rule 197 (multisetremovestmt)


state 440

   92 designator: designator . '[' expr ']'
   93           | designator . '.' ID
  196 multisetremovestmt: MULTISETREMOVEPRED '(' @26 ID ':' designator . @27 ',' expr ')'

    '['  shift, and go to state 105
    '.'  shift, and go to state 106

    $default  reduce using rule 195 (@27)

    @27  go to state 449


state 441

  193 multisetaddstmt: MULTISETADD '(' designator ',' designator ')' .

    $default  reduce using rule 193 (multisetaddstmt)


state 442

   66 procDecl: PROCEDURE ID @9 '(' optformals ')' semi @10 optdecls @11 optstmts endprocedure semi .

    $default  reduce using rule 66 (procDecl)


state 443

   73 funcDecl: FUNCTION ID @12 '(' optformals ')' @13 ':' typeExpr semi @14 optdecls @15 . optstmts endfunction semi

    END          reduce using rule 146 (optstmts)
    ENDFUNCTION  reduce using rule 146 (optstmts)
    $default     reduce using rule 144 (@22)

    optstmts  go to state 450
    @22       go to state 242


state 444

  172 elsif: ELSIF expr THEN . optstmts

    END       reduce using rule 146 (optstmts)
    ELSIF     reduce using rule 146 (optstmts)
    ELSE      reduce using rule 146 (optstmts)
    ENDIF     reduce using rule 146 (optstmts)
    $default  reduce using rule 144 (@22)

    optstmts  go to state 451
    @22       go to state 242


state 445

  132 exprlist: exprlist . ',' expr
  134         | exprlist . ',' UNDEFINED
  185 case: CASE exprlist . ':' optstmts

    ':'  shift, and go to state 452
    ','  shift, and go to state 207


state 446

  182 endswitch: END .

    $default  reduce using rule 182 (endswitch)


state 447

  181 endswitch: ENDSWITCH .

    $default  reduce using rule 181 (endswitch)


state 448

  180 switchstmt: SWITCH expr @23 @24 optCases optElse endswitch .

    $default  reduce using rule 180 (switchstmt)


state 449

  196 multisetremovestmt: MULTISETREMOVEPRED '(' @26 ID ':' designator @27 . ',' expr ')'

    ','  shift, and go to state 453


state 450

   73 funcDecl: FUNCTION ID @12 '(' optformals ')' @13 ':' typeExpr semi @14 optdecls @15 optstmts . endfunction semi

    END          shift, and go to state 454
    ENDFUNCTION  shift, and go to state 455

    endfunction  go to state 456


state 451

  172 elsif: ELSIF expr THEN optstmts .

    $default  reduce using rule 172 (elsif)


state 452

  185 case: CASE exprlist ':' . optstmts

    END        reduce using rule 146 (optstmts)
    ELSE       reduce using rule 146 (optstmts)
    CASE       reduce using rule 146 (optstmts)
    ENDSWITCH  reduce using rule 146 (optstmts)
    $default   reduce using rule 144 (@22)

    optstmts  go to state 457
    @22       go to state 242


state 453

  196 multisetremovestmt: MULTISETREMOVEPRED '(' @26 ID ':' designator @27 ',' . expr ')'

    error          shift, and go to state 49
    FORALL         shift, and go to state 50
    EXISTS         shift, and go to state 51
    ID             shift, and go to state 52
    INTCONST       shift, and go to state 53
    ISMEMBER       shift, and go to state 54
    ISUNDEFINED    shift, and go to state 55
    MULTISETCOUNT  shift, and go to state 56
    NOT            shift, and go to state 57
    '+'            shift, and go to state 58
    '-'            shift, and go to state 59
    '('            shift, and go to state 60

    designator  go to state 61
    expr        go to state 458


state 454

   75 endfunction: END .

    $default  reduce using rule 75 (endfunction)


state 455

   74 endfunction: ENDFUNCTION .

    $default  reduce using rule 74 (endfunction)


state 456

   73 funcDecl: FUNCTION ID @12 '(' optformals ')' @13 ':' typeExpr semi @14 optdecls @15 optstmts endfunction . semi

    ';'  shift, and go to state 26

    semi  go to state 459


state 457

  185 case: CASE exprlist ':' optstmts .

    $default  reduce using rule 185 (case)


state 458

   94 expr: expr . '?' expr ':' expr
   95     | expr . IMPLIES expr
   96     | expr . '|' expr
   97     | expr . '&' expr
   99     | expr . '<' expr
  100     | expr . LEQ expr
  101     | expr . '>' expr
  102     | expr . GEQ expr
  103     | expr . '=' expr
  104     | expr . NEQ expr
  105     | expr . '+' expr
  106     | expr . '-' expr
  109     | expr . '*' expr
  110     | expr . '/' expr
  111     | expr . '%' expr
  196 multisetremovestmt: MULTISETREMOVEPRED '(' @26 ID ':' designator @27 ',' expr . ')'

    '?'      shift, and go to state 107
    IMPLIES  shift, and go to state 108
    '|'      shift, and go to state 109
    '&'      shift, and go to state 110
    '<'      shift, and go to state 111
    '='      shift, and go to state 112
    '>'      shift, and go to state 113
    GEQ      shift, and go to state 114
    NEQ      shift, and go to state 115
    LEQ      shift, and go to state 116
    '+'      shift, and go to state 117
    '-'      shift, and go to state 118
    '*'      shift, and go to state 119
    '/'      shift, and go to state 120
    '%'      shift, and go to state 121
    ')'      shift, and go to state 460


state 459

   73 funcDecl: FUNCTION ID @12 '(' optformals ')' @13 ':' typeExpr semi @14 optdecls @15 optstmts endfunction semi .

    $default  reduce using rule 73 (funcDecl)


state 460

  196 multisetremovestmt: MULTISETREMOVEPRED '(' @26 ID ':' designator @27 ',' expr ')' .

    $default  reduce using rule 196 (multisetremovestmt)
